//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace HealthCare.Win
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace HealthCare.Win.HealthCare_Win_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[173];
            _typeNameTable[0] = "Template10.Common.BootStrapper";
            _typeNameTable[1] = "Windows.UI.Xaml.Application";
            _typeNameTable[2] = "Template10.Common.StateItems";
            _typeNameTable[3] = "System.Collections.Generic.Dictionary`2<String, Object>";
            _typeNameTable[4] = "Object";
            _typeNameTable[5] = "String";
            _typeNameTable[6] = "Template10.Services.NavigationService.INavigationService";
            _typeNameTable[7] = "System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>";
            _typeNameTable[8] = "System.MulticastDelegate";
            _typeNameTable[9] = "System.Delegate";
            _typeNameTable[10] = "TimeSpan";
            _typeNameTable[11] = "System.ValueType";
            _typeNameTable[12] = "Boolean";
            _typeNameTable[13] = "Windows.ApplicationModel.Activation.IActivatedEventArgs";
            _typeNameTable[14] = "Template10.Controls.ModalDialog";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[16] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[17] = "HealthCare.Win.RootCommand";
            _typeNameTable[18] = "Template10.Mvvm.MvxCommand";
            _typeNameTable[19] = "Windows.UI.Color";
            _typeNameTable[20] = "Byte";
            _typeNameTable[21] = "HealthCare.Win.Converter.ItemClickedConverter";
            _typeNameTable[22] = "HealthCare.Win.Converter.SourceToVisibilityConverter";
            _typeNameTable[23] = "HealthCare.Core.Resources.LocalizedStrings";
            _typeNameTable[24] = "HealthCare.Core.Resources.AppResources";
            _typeNameTable[25] = "HealthCare.Win.Controls.BusyIndicator";
            _typeNameTable[26] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[27] = "HealthCare.Win.Controls.NumberPicker";
            _typeNameTable[28] = "Int32";
            _typeNameTable[29] = "HealthCare.Win.Controls.TabHeader";
            _typeNameTable[30] = "HealthCare.Core.Converters.MilisecondToDateValueConverter";
            _typeNameTable[31] = "HealthCare.Core.MvxValueConverter`2<Int64, String>";
            _typeNameTable[32] = "HealthCare.Core.ViewModels.CheckupViewModel";
            _typeNameTable[33] = "Template10.Mvvm.ViewModelBase";
            _typeNameTable[34] = "Template10.Mvvm.BindableBase";
            _typeNameTable[35] = "HealthCare.Core.Models.Checkup";
            _typeNameTable[36] = "Template10.Common.IDispatcherWrapper";
            _typeNameTable[37] = "Template10.Common.IStateItems";
            _typeNameTable[38] = "HealthCare.Win.Views.CheckupView";
            _typeNameTable[39] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[40] = "HealthCare.Core.ViewModels.CmeSearchViewModel";
            _typeNameTable[41] = "System.Collections.Generic.List`1<HealthCare.Core.Models.CmeClass>";
            _typeNameTable[42] = "HealthCare.Core.Models.CmeClass";
            _typeNameTable[43] = "Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.CmeClass>";
            _typeNameTable[44] = "HealthCare.Win.Controls.ListViewBase";
            _typeNameTable[45] = "System.Windows.Input.ICommand";
            _typeNameTable[46] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[47] = "HealthCare.Win.Views.CmeSearchView";
            _typeNameTable[48] = "HealthCare.Core.ViewModels.WeekTopicFileViewModel";
            _typeNameTable[49] = "System.Collections.Generic.List`1<HealthCare.Core.Models.TopicFiles>";
            _typeNameTable[50] = "HealthCare.Core.Models.TopicFiles";
            _typeNameTable[51] = "HealthCare.Core.Models.Topic";
            _typeNameTable[52] = "Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.TopicFiles>";
            _typeNameTable[53] = "HealthCare.Win.Views.WeekTopicFileView";
            _typeNameTable[54] = "HealthCare.Core.ViewModels.CmeCategoryViewModel";
            _typeNameTable[55] = "HealthCare.Core.Models.CmeCategory";
            _typeNameTable[56] = "HealthCare.Core.MyNotifyPropertyChanged";
            _typeNameTable[57] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[58] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[59] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[60] = "HealthCare.Win.Controls.GridAdaptiveBehavior";
            _typeNameTable[61] = "Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ItemsWrapGrid>";
            _typeNameTable[62] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[63] = "Double";
            _typeNameTable[64] = "Windows.UI.Xaml.Controls.ItemsWrapGrid";
            _typeNameTable[65] = "HealthCare.Win.Views.CmeCategoryView";
            _typeNameTable[66] = "HealthCare.Core.ViewModels.CmeClassViewModel";
            _typeNameTable[67] = "HealthCare.Win.Views.CmeClassView";
            _typeNameTable[68] = "HealthCare.Core.ViewModels.ConsultViewModel";
            _typeNameTable[69] = "HealthCare.Core.Models.ConsultRequest";
            _typeNameTable[70] = "System.Collections.ObjectModel.ObservableCollection`1<HealthCare.Core.Models.ConsultResponse>";
            _typeNameTable[71] = "System.Collections.ObjectModel.Collection`1<HealthCare.Core.Models.ConsultResponse>";
            _typeNameTable[72] = "HealthCare.Core.Models.ConsultResponse";
            _typeNameTable[73] = "Int64";
            _typeNameTable[74] = "HealthCare.Core.Models.Doctor";
            _typeNameTable[75] = "HealthCare.Core.Models.SignUpInfo";
            _typeNameTable[76] = "Template10.Behaviors.EventTriggerBehaviorBase";
            _typeNameTable[77] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[78] = "HealthCare.Win.Controls.ShowDialogAction";
            _typeNameTable[79] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[80] = "HealthCare.Win.Views.ConsultView";
            _typeNameTable[81] = "HealthCare.Win.Views.HomeTab.ChbaseView";
            _typeNameTable[82] = "Windows.UI.Xaml.Controls.WebView";
            _typeNameTable[83] = "HealthCare.Core.Converters.WeekTopicStatusValueConverter";
            _typeNameTable[84] = "HealthCare.Core.MvxValueConverter";
            _typeNameTable[85] = "HealthCare.Win.Controls.DataRequestBehavior";
            _typeNameTable[86] = "Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ListViewBase>";
            _typeNameTable[87] = "Windows.UI.Xaml.Controls.ListViewBase";
            _typeNameTable[88] = "HealthCare.Win.Views.HomeTab.CheckupsView";
            _typeNameTable[89] = "HealthCare.Core.ViewModels.HomeViewModel";
            _typeNameTable[90] = "HealthCare.Win.Views.HomeTab.CmeLibraryView";
            _typeNameTable[91] = "HealthCare.Win.Views.HomeTab.ConsultView";
            _typeNameTable[92] = "HealthCare.Win.Views.HomeTab.WeekTopicView";
            _typeNameTable[93] = "HealthCare.Win.Converter.DateTimeConverter";
            _typeNameTable[94] = "HealthCare.Core.ViewModels.ScheduleAddingViewModel";
            _typeNameTable[95] = "System.Collections.Generic.List`1<Int32>";
            _typeNameTable[96] = "System.DateTime";
            _typeNameTable[97] = "System.Collections.Generic.List`1<HealthCare.Core.Models.Hospital>";
            _typeNameTable[98] = "HealthCare.Core.Models.Hospital";
            _typeNameTable[99] = "System.Collections.Generic.List`1<Double>";
            _typeNameTable[100] = "System.Collections.Generic.List`1<String>";
            _typeNameTable[101] = "HealthCare.Core.Models.Photos";
            _typeNameTable[102] = "System.Nullable`1<System.DateTime>";
            _typeNameTable[103] = "System.Collections.Generic.List`1<HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>";
            _typeNameTable[104] = "HealthCare.Core.Models.Enums.DoctorDayOfWeekObject";
            _typeNameTable[105] = "HealthCare.Core.Models.Enums.DoctorDayOfWeek";
            _typeNameTable[106] = "System.Enum";
            _typeNameTable[107] = "HealthCare.Core.Models.Enums.DoctorDayOfWeek[]";
            _typeNameTable[108] = "System.Array";
            _typeNameTable[109] = "System.Collections.Generic.List`1<HealthCare.Core.ViewModels.BoolDoctorDayofWeek>";
            _typeNameTable[110] = "HealthCare.Core.ViewModels.BoolDoctorDayofWeek";
            _typeNameTable[111] = "HealthCare.Core.ViewModels.ListBoolDoctorDayofWeek";
            _typeNameTable[112] = "HealthCare.Win.Views.ScheduleAddingView";
            _typeNameTable[113] = "HealthCare.Core.ViewModels.SetPasswordViewModel";
            _typeNameTable[114] = "HealthCare.Win.Views.SetPasswordView";
            _typeNameTable[115] = "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior";
            _typeNameTable[116] = "Microsoft.Xaml.Interactions.Core.ComparisonConditionType";
            _typeNameTable[117] = "Template10.Behaviors.ConditionalAction";
            _typeNameTable[118] = "Template10.Behaviors.ConditionalAction.Operators";
            _typeNameTable[119] = "Microsoft.Xaml.Interactions.Core.ChangePropertyAction";
            _typeNameTable[120] = "Windows.UI.Xaml.PropertyPath";
            _typeNameTable[121] = "Template10.Controls.HamburgerButtonInfo";
            _typeNameTable[122] = "Template10.Mvvm.DependencyBindableBase";
            _typeNameTable[123] = "Template10.Controls.HamburgerButtonInfo.ButtonTypes";
            _typeNameTable[124] = "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo";
            _typeNameTable[125] = "System.Type";
            _typeNameTable[126] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[127] = "System.Nullable`1<Boolean>";
            _typeNameTable[128] = "Template10.Controls.HamburgerMenu";
            _typeNameTable[129] = "System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>";
            _typeNameTable[130] = "System.Collections.ObjectModel.Collection`1<Template10.Controls.HamburgerButtonInfo>";
            _typeNameTable[131] = "Windows.UI.Xaml.Media.SolidColorBrush";
            _typeNameTable[132] = "Windows.UI.Xaml.Controls.SplitViewDisplayMode";
            _typeNameTable[133] = "Template10.Mvvm.MvxCommand`1<Template10.Controls.HamburgerButtonInfo>";
            _typeNameTable[134] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[135] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[136] = "Template10.Controls.HamburgerMenu.OpenCloseModes";
            _typeNameTable[137] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[138] = "Windows.UI.Xaml.Media.Animation.TransitionCollection";
            _typeNameTable[139] = "Template10.Controls.PageHeader";
            _typeNameTable[140] = "Windows.UI.Xaml.Controls.CommandBar";
            _typeNameTable[141] = "Windows.UI.Xaml.Controls.Symbol";
            _typeNameTable[142] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[143] = "Template10.Behaviors.NavButtonBehavior";
            _typeNameTable[144] = "Template10.Behaviors.NavButtonBehavior.Directions";
            _typeNameTable[145] = "Template10.Controls.Resizer";
            _typeNameTable[146] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[147] = "Windows.Foundation.Size";
            _typeNameTable[148] = "HealthCare.Win.Converter.ConsentValueConverter";
            _typeNameTable[149] = "HealthCare.Win.Views.HomeTab.SettingView";
            _typeNameTable[150] = "HealthCare.Core.ViewModels.LoginViewModel";
            _typeNameTable[151] = "HealthCare.Win.Views.LoginView";
            _typeNameTable[152] = "HealthCare.Core.ViewModels.ResetPassViewModel";
            _typeNameTable[153] = "HealthCare.Win.Views.ResetPassView";
            _typeNameTable[154] = "HealthCare.Core.Converters.BoolVisValueConverter";
            _typeNameTable[155] = "HealthCare.Core.MvxBaseVisibilityValueConverter`1<Boolean>";
            _typeNameTable[156] = "HealthCare.Core.MvxValueConverter`2<Boolean, Windows.UI.Xaml.Visibility>";
            _typeNameTable[157] = "HealthCare.Core.Converters.ReverseBoolVisValueConverter";
            _typeNameTable[158] = "HealthCare.Win.Views.HomeTab.ScheduleView";
            _typeNameTable[159] = "HealthCare.Win.Views.Shell";
            _typeNameTable[160] = "HealthCare.Core.ViewModels.SignUpViewModel";
            _typeNameTable[161] = "System.Collections.Generic.List`1<HealthCare.Core.Models.City>";
            _typeNameTable[162] = "HealthCare.Core.Models.City";
            _typeNameTable[163] = "System.Collections.Generic.List`1<HealthCare.Core.Models.District>";
            _typeNameTable[164] = "HealthCare.Core.Models.District";
            _typeNameTable[165] = "System.Collections.Generic.List`1<HealthCare.Core.Models.CheckupType>";
            _typeNameTable[166] = "HealthCare.Core.Models.CheckupType";
            _typeNameTable[167] = "HealthCare.Core.Models.NameMap";
            _typeNameTable[168] = "System.Collections.Generic.List`1<HealthCare.Core.Models.Gender>";
            _typeNameTable[169] = "HealthCare.Core.Models.Gender";
            _typeNameTable[170] = "HealthCare.Win.Views.SignUpView";
            _typeNameTable[171] = "HealthCare.Core.ViewModels.UpdateProfileViewModel";
            _typeNameTable[172] = "HealthCare.Win.Views.UpdateProfileView";

            _typeTable = new global::System.Type[173];
            _typeTable[0] = typeof(global::Template10.Common.BootStrapper);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Application);
            _typeTable[2] = typeof(global::Template10.Common.StateItems);
            _typeTable[3] = typeof(global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>);
            _typeTable[4] = typeof(global::System.Object);
            _typeTable[5] = typeof(global::System.String);
            _typeTable[6] = typeof(global::Template10.Services.NavigationService.INavigationService);
            _typeTable[7] = typeof(global::System.Func<global::Windows.ApplicationModel.Activation.SplashScreen, global::Windows.UI.Xaml.Controls.UserControl>);
            _typeTable[8] = typeof(global::System.MulticastDelegate);
            _typeTable[9] = typeof(global::System.Delegate);
            _typeTable[10] = typeof(global::System.TimeSpan);
            _typeTable[11] = typeof(global::System.ValueType);
            _typeTable[12] = typeof(global::System.Boolean);
            _typeTable[13] = typeof(global::Windows.ApplicationModel.Activation.IActivatedEventArgs);
            _typeTable[14] = typeof(global::Template10.Controls.ModalDialog);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[17] = typeof(global::HealthCare.Win.RootCommand);
            _typeTable[18] = typeof(global::Template10.Mvvm.MvxCommand);
            _typeTable[19] = typeof(global::Windows.UI.Color);
            _typeTable[20] = typeof(global::System.Byte);
            _typeTable[21] = typeof(global::HealthCare.Win.Converter.ItemClickedConverter);
            _typeTable[22] = typeof(global::HealthCare.Win.Converter.SourceToVisibilityConverter);
            _typeTable[23] = typeof(global::HealthCare.Core.Resources.LocalizedStrings);
            _typeTable[24] = typeof(global::HealthCare.Core.Resources.AppResources);
            _typeTable[25] = typeof(global::HealthCare.Win.Controls.BusyIndicator);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[27] = typeof(global::HealthCare.Win.Controls.NumberPicker);
            _typeTable[28] = typeof(global::System.Int32);
            _typeTable[29] = typeof(global::HealthCare.Win.Controls.TabHeader);
            _typeTable[30] = typeof(global::HealthCare.Core.Converters.MilisecondToDateValueConverter);
            _typeTable[31] = typeof(global::HealthCare.Core.MvxValueConverter<global::System.Int64, global::System.String>);
            _typeTable[32] = typeof(global::HealthCare.Core.ViewModels.CheckupViewModel);
            _typeTable[33] = typeof(global::Template10.Mvvm.ViewModelBase);
            _typeTable[34] = typeof(global::Template10.Mvvm.BindableBase);
            _typeTable[35] = typeof(global::HealthCare.Core.Models.Checkup);
            _typeTable[36] = typeof(global::Template10.Common.IDispatcherWrapper);
            _typeTable[37] = typeof(global::Template10.Common.IStateItems);
            _typeTable[38] = typeof(global::HealthCare.Win.Views.CheckupView);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[40] = typeof(global::HealthCare.Core.ViewModels.CmeSearchViewModel);
            _typeTable[41] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.CmeClass>);
            _typeTable[42] = typeof(global::HealthCare.Core.Models.CmeClass);
            _typeTable[43] = typeof(global::Template10.Mvvm.MvxCommand<global::HealthCare.Core.Models.CmeClass>);
            _typeTable[44] = typeof(global::HealthCare.Win.Controls.ListViewBase);
            _typeTable[45] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[46] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[47] = typeof(global::HealthCare.Win.Views.CmeSearchView);
            _typeTable[48] = typeof(global::HealthCare.Core.ViewModels.WeekTopicFileViewModel);
            _typeTable[49] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.TopicFiles>);
            _typeTable[50] = typeof(global::HealthCare.Core.Models.TopicFiles);
            _typeTable[51] = typeof(global::HealthCare.Core.Models.Topic);
            _typeTable[52] = typeof(global::Template10.Mvvm.MvxCommand<global::HealthCare.Core.Models.TopicFiles>);
            _typeTable[53] = typeof(global::HealthCare.Win.Views.WeekTopicFileView);
            _typeTable[54] = typeof(global::HealthCare.Core.ViewModels.CmeCategoryViewModel);
            _typeTable[55] = typeof(global::HealthCare.Core.Models.CmeCategory);
            _typeTable[56] = typeof(global::HealthCare.Core.MyNotifyPropertyChanged);
            _typeTable[57] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[58] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[59] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[60] = typeof(global::HealthCare.Win.Controls.GridAdaptiveBehavior);
            _typeTable[61] = typeof(global::Microsoft.Xaml.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.ItemsWrapGrid>);
            _typeTable[62] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[63] = typeof(global::System.Double);
            _typeTable[64] = typeof(global::Windows.UI.Xaml.Controls.ItemsWrapGrid);
            _typeTable[65] = typeof(global::HealthCare.Win.Views.CmeCategoryView);
            _typeTable[66] = typeof(global::HealthCare.Core.ViewModels.CmeClassViewModel);
            _typeTable[67] = typeof(global::HealthCare.Win.Views.CmeClassView);
            _typeTable[68] = typeof(global::HealthCare.Core.ViewModels.ConsultViewModel);
            _typeTable[69] = typeof(global::HealthCare.Core.Models.ConsultRequest);
            _typeTable[70] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::HealthCare.Core.Models.ConsultResponse>);
            _typeTable[71] = typeof(global::System.Collections.ObjectModel.Collection<global::HealthCare.Core.Models.ConsultResponse>);
            _typeTable[72] = typeof(global::HealthCare.Core.Models.ConsultResponse);
            _typeTable[73] = typeof(global::System.Int64);
            _typeTable[74] = typeof(global::HealthCare.Core.Models.Doctor);
            _typeTable[75] = typeof(global::HealthCare.Core.Models.SignUpInfo);
            _typeTable[76] = typeof(global::Template10.Behaviors.EventTriggerBehaviorBase);
            _typeTable[77] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[78] = typeof(global::HealthCare.Win.Controls.ShowDialogAction);
            _typeTable[79] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[80] = typeof(global::HealthCare.Win.Views.ConsultView);
            _typeTable[81] = typeof(global::HealthCare.Win.Views.HomeTab.ChbaseView);
            _typeTable[82] = typeof(global::Windows.UI.Xaml.Controls.WebView);
            _typeTable[83] = typeof(global::HealthCare.Core.Converters.WeekTopicStatusValueConverter);
            _typeTable[84] = typeof(global::HealthCare.Core.MvxValueConverter);
            _typeTable[85] = typeof(global::HealthCare.Win.Controls.DataRequestBehavior);
            _typeTable[86] = typeof(global::Microsoft.Xaml.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.ListViewBase>);
            _typeTable[87] = typeof(global::Windows.UI.Xaml.Controls.ListViewBase);
            _typeTable[88] = typeof(global::HealthCare.Win.Views.HomeTab.CheckupsView);
            _typeTable[89] = typeof(global::HealthCare.Core.ViewModels.HomeViewModel);
            _typeTable[90] = typeof(global::HealthCare.Win.Views.HomeTab.CmeLibraryView);
            _typeTable[91] = typeof(global::HealthCare.Win.Views.HomeTab.ConsultView);
            _typeTable[92] = typeof(global::HealthCare.Win.Views.HomeTab.WeekTopicView);
            _typeTable[93] = typeof(global::HealthCare.Win.Converter.DateTimeConverter);
            _typeTable[94] = typeof(global::HealthCare.Core.ViewModels.ScheduleAddingViewModel);
            _typeTable[95] = typeof(global::System.Collections.Generic.List<global::System.Int32>);
            _typeTable[96] = typeof(global::System.DateTime);
            _typeTable[97] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.Hospital>);
            _typeTable[98] = typeof(global::HealthCare.Core.Models.Hospital);
            _typeTable[99] = typeof(global::System.Collections.Generic.List<global::System.Double>);
            _typeTable[100] = typeof(global::System.Collections.Generic.List<global::System.String>);
            _typeTable[101] = typeof(global::HealthCare.Core.Models.Photos);
            _typeTable[102] = typeof(global::System.Nullable<global::System.DateTime>);
            _typeTable[103] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>);
            _typeTable[104] = typeof(global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject);
            _typeTable[105] = typeof(global::HealthCare.Core.Models.Enums.DoctorDayOfWeek);
            _typeTable[106] = typeof(global::System.Enum);
            _typeTable[107] = typeof(global::HealthCare.Core.Models.Enums.DoctorDayOfWeek[]);
            _typeTable[108] = typeof(global::System.Array);
            _typeTable[109] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek>);
            _typeTable[110] = typeof(global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek);
            _typeTable[111] = typeof(global::HealthCare.Core.ViewModels.ListBoolDoctorDayofWeek);
            _typeTable[112] = typeof(global::HealthCare.Win.Views.ScheduleAddingView);
            _typeTable[113] = typeof(global::HealthCare.Core.ViewModels.SetPasswordViewModel);
            _typeTable[114] = typeof(global::HealthCare.Win.Views.SetPasswordView);
            _typeTable[115] = typeof(global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior);
            _typeTable[116] = typeof(global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType);
            _typeTable[117] = typeof(global::Template10.Behaviors.ConditionalAction);
            _typeTable[118] = typeof(global::Template10.Behaviors.ConditionalAction.Operators);
            _typeTable[119] = typeof(global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction);
            _typeTable[120] = typeof(global::Windows.UI.Xaml.PropertyPath);
            _typeTable[121] = typeof(global::Template10.Controls.HamburgerButtonInfo);
            _typeTable[122] = typeof(global::Template10.Mvvm.DependencyBindableBase);
            _typeTable[123] = typeof(global::Template10.Controls.HamburgerButtonInfo.ButtonTypes);
            _typeTable[124] = typeof(global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo);
            _typeTable[125] = typeof(global::System.Type);
            _typeTable[126] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[127] = typeof(global::System.Nullable<global::System.Boolean>);
            _typeTable[128] = typeof(global::Template10.Controls.HamburgerMenu);
            _typeTable[129] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>);
            _typeTable[130] = typeof(global::System.Collections.ObjectModel.Collection<global::Template10.Controls.HamburgerButtonInfo>);
            _typeTable[131] = typeof(global::Windows.UI.Xaml.Media.SolidColorBrush);
            _typeTable[132] = typeof(global::Windows.UI.Xaml.Controls.SplitViewDisplayMode);
            _typeTable[133] = typeof(global::Template10.Mvvm.MvxCommand<global::Template10.Controls.HamburgerButtonInfo>);
            _typeTable[134] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[135] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[136] = typeof(global::Template10.Controls.HamburgerMenu.OpenCloseModes);
            _typeTable[137] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[138] = typeof(global::Windows.UI.Xaml.Media.Animation.TransitionCollection);
            _typeTable[139] = typeof(global::Template10.Controls.PageHeader);
            _typeTable[140] = typeof(global::Windows.UI.Xaml.Controls.CommandBar);
            _typeTable[141] = typeof(global::Windows.UI.Xaml.Controls.Symbol);
            _typeTable[142] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[143] = typeof(global::Template10.Behaviors.NavButtonBehavior);
            _typeTable[144] = typeof(global::Template10.Behaviors.NavButtonBehavior.Directions);
            _typeTable[145] = typeof(global::Template10.Controls.Resizer);
            _typeTable[146] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[147] = typeof(global::Windows.Foundation.Size);
            _typeTable[148] = typeof(global::HealthCare.Win.Converter.ConsentValueConverter);
            _typeTable[149] = typeof(global::HealthCare.Win.Views.HomeTab.SettingView);
            _typeTable[150] = typeof(global::HealthCare.Core.ViewModels.LoginViewModel);
            _typeTable[151] = typeof(global::HealthCare.Win.Views.LoginView);
            _typeTable[152] = typeof(global::HealthCare.Core.ViewModels.ResetPassViewModel);
            _typeTable[153] = typeof(global::HealthCare.Win.Views.ResetPassView);
            _typeTable[154] = typeof(global::HealthCare.Core.Converters.BoolVisValueConverter);
            _typeTable[155] = typeof(global::HealthCare.Core.MvxBaseVisibilityValueConverter<global::System.Boolean>);
            _typeTable[156] = typeof(global::HealthCare.Core.MvxValueConverter<global::System.Boolean, global::Windows.UI.Xaml.Visibility>);
            _typeTable[157] = typeof(global::HealthCare.Core.Converters.ReverseBoolVisValueConverter);
            _typeTable[158] = typeof(global::HealthCare.Win.Views.HomeTab.ScheduleView);
            _typeTable[159] = typeof(global::HealthCare.Win.Views.Shell);
            _typeTable[160] = typeof(global::HealthCare.Core.ViewModels.SignUpViewModel);
            _typeTable[161] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.City>);
            _typeTable[162] = typeof(global::HealthCare.Core.Models.City);
            _typeTable[163] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.District>);
            _typeTable[164] = typeof(global::HealthCare.Core.Models.District);
            _typeTable[165] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.CheckupType>);
            _typeTable[166] = typeof(global::HealthCare.Core.Models.CheckupType);
            _typeTable[167] = typeof(global::HealthCare.Core.Models.NameMap);
            _typeTable[168] = typeof(global::System.Collections.Generic.List<global::HealthCare.Core.Models.Gender>);
            _typeTable[169] = typeof(global::HealthCare.Core.Models.Gender);
            _typeTable[170] = typeof(global::HealthCare.Win.Views.SignUpView);
            _typeTable[171] = typeof(global::HealthCare.Core.ViewModels.UpdateProfileViewModel);
            _typeTable[172] = typeof(global::HealthCare.Win.Views.UpdateProfileView);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_2_StateItems() { return new global::Template10.Common.StateItems(); }
        private object Activate_3_Dictionary() { return new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>(); }
        private object Activate_14_ModalDialog() { return new global::Template10.Controls.ModalDialog(); }
        private object Activate_17_RootCommand() { return new global::HealthCare.Win.RootCommand(); }
        private object Activate_21_ItemClickedConverter() { return new global::HealthCare.Win.Converter.ItemClickedConverter(); }
        private object Activate_22_SourceToVisibilityConverter() { return new global::HealthCare.Win.Converter.SourceToVisibilityConverter(); }
        private object Activate_23_LocalizedStrings() { return new global::HealthCare.Core.Resources.LocalizedStrings(); }
        private object Activate_25_BusyIndicator() { return new global::HealthCare.Win.Controls.BusyIndicator(); }
        private object Activate_27_NumberPicker() { return new global::HealthCare.Win.Controls.NumberPicker(); }
        private object Activate_29_TabHeader() { return new global::HealthCare.Win.Controls.TabHeader(); }
        private object Activate_30_MilisecondToDateValueConverter() { return new global::HealthCare.Core.Converters.MilisecondToDateValueConverter(); }
        private object Activate_31_MvxValueConverter() { return new global::HealthCare.Core.MvxValueConverter<global::System.Int64, global::System.String>(); }
        private object Activate_32_CheckupViewModel() { return new global::HealthCare.Core.ViewModels.CheckupViewModel(); }
        private object Activate_35_Checkup() { return new global::HealthCare.Core.Models.Checkup(); }
        private object Activate_38_CheckupView() { return new global::HealthCare.Win.Views.CheckupView(); }
        private object Activate_40_CmeSearchViewModel() { return new global::HealthCare.Core.ViewModels.CmeSearchViewModel(); }
        private object Activate_41_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.CmeClass>(); }
        private object Activate_42_CmeClass() { return new global::HealthCare.Core.Models.CmeClass(); }
        private object Activate_47_CmeSearchView() { return new global::HealthCare.Win.Views.CmeSearchView(); }
        private object Activate_48_WeekTopicFileViewModel() { return new global::HealthCare.Core.ViewModels.WeekTopicFileViewModel(); }
        private object Activate_49_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.TopicFiles>(); }
        private object Activate_50_TopicFiles() { return new global::HealthCare.Core.Models.TopicFiles(); }
        private object Activate_51_Topic() { return new global::HealthCare.Core.Models.Topic(); }
        private object Activate_53_WeekTopicFileView() { return new global::HealthCare.Win.Views.WeekTopicFileView(); }
        private object Activate_54_CmeCategoryViewModel() { return new global::HealthCare.Core.ViewModels.CmeCategoryViewModel(); }
        private object Activate_55_CmeCategory() { return new global::HealthCare.Core.Models.CmeCategory(); }
        private object Activate_58_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_60_GridAdaptiveBehavior() { return new global::HealthCare.Win.Controls.GridAdaptiveBehavior(); }
        private object Activate_65_CmeCategoryView() { return new global::HealthCare.Win.Views.CmeCategoryView(); }
        private object Activate_66_CmeClassViewModel() { return new global::HealthCare.Core.ViewModels.CmeClassViewModel(); }
        private object Activate_67_CmeClassView() { return new global::HealthCare.Win.Views.CmeClassView(); }
        private object Activate_68_ConsultViewModel() { return new global::HealthCare.Core.ViewModels.ConsultViewModel(); }
        private object Activate_69_ConsultRequest() { return new global::HealthCare.Core.Models.ConsultRequest(); }
        private object Activate_70_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::HealthCare.Core.Models.ConsultResponse>(); }
        private object Activate_71_Collection() { return new global::System.Collections.ObjectModel.Collection<global::HealthCare.Core.Models.ConsultResponse>(); }
        private object Activate_72_ConsultResponse() { return new global::HealthCare.Core.Models.ConsultResponse(); }
        private object Activate_74_Doctor() { return new global::HealthCare.Core.Models.Doctor(); }
        private object Activate_75_SignUpInfo() { return new global::HealthCare.Core.Models.SignUpInfo(); }
        private object Activate_76_EventTriggerBehaviorBase() { return new global::Template10.Behaviors.EventTriggerBehaviorBase(); }
        private object Activate_77_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_78_ShowDialogAction() { return new global::HealthCare.Win.Controls.ShowDialogAction(); }
        private object Activate_80_ConsultView() { return new global::HealthCare.Win.Views.ConsultView(); }
        private object Activate_81_ChbaseView() { return new global::HealthCare.Win.Views.HomeTab.ChbaseView(); }
        private object Activate_83_WeekTopicStatusValueConverter() { return new global::HealthCare.Core.Converters.WeekTopicStatusValueConverter(); }
        private object Activate_84_MvxValueConverter() { return new global::HealthCare.Core.MvxValueConverter(); }
        private object Activate_85_DataRequestBehavior() { return new global::HealthCare.Win.Controls.DataRequestBehavior(); }
        private object Activate_88_CheckupsView() { return new global::HealthCare.Win.Views.HomeTab.CheckupsView(); }
        private object Activate_89_HomeViewModel() { return new global::HealthCare.Core.ViewModels.HomeViewModel(); }
        private object Activate_90_CmeLibraryView() { return new global::HealthCare.Win.Views.HomeTab.CmeLibraryView(); }
        private object Activate_91_ConsultView() { return new global::HealthCare.Win.Views.HomeTab.ConsultView(); }
        private object Activate_92_WeekTopicView() { return new global::HealthCare.Win.Views.HomeTab.WeekTopicView(); }
        private object Activate_93_DateTimeConverter() { return new global::HealthCare.Win.Converter.DateTimeConverter(); }
        private object Activate_94_ScheduleAddingViewModel() { return new global::HealthCare.Core.ViewModels.ScheduleAddingViewModel(); }
        private object Activate_95_List() { return new global::System.Collections.Generic.List<global::System.Int32>(); }
        private object Activate_97_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.Hospital>(); }
        private object Activate_98_Hospital() { return new global::HealthCare.Core.Models.Hospital(); }
        private object Activate_99_List() { return new global::System.Collections.Generic.List<global::System.Double>(); }
        private object Activate_100_List() { return new global::System.Collections.Generic.List<global::System.String>(); }
        private object Activate_101_Photos() { return new global::HealthCare.Core.Models.Photos(); }
        private object Activate_103_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>(); }
        private object Activate_104_DoctorDayOfWeekObject() { return new global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject(); }
        private object Activate_109_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek>(); }
        private object Activate_110_BoolDoctorDayofWeek() { return new global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek(); }
        private object Activate_111_ListBoolDoctorDayofWeek() { return new global::HealthCare.Core.ViewModels.ListBoolDoctorDayofWeek(); }
        private object Activate_112_ScheduleAddingView() { return new global::HealthCare.Win.Views.ScheduleAddingView(); }
        private object Activate_113_SetPasswordViewModel() { return new global::HealthCare.Core.ViewModels.SetPasswordViewModel(); }
        private object Activate_114_SetPasswordView() { return new global::HealthCare.Win.Views.SetPasswordView(); }
        private object Activate_115_DataTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior(); }
        private object Activate_117_ConditionalAction() { return new global::Template10.Behaviors.ConditionalAction(); }
        private object Activate_119_ChangePropertyAction() { return new global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction(); }
        private object Activate_121_HamburgerButtonInfo() { return new global::Template10.Controls.HamburgerButtonInfo(); }
        private object Activate_128_HamburgerMenu() { return new global::Template10.Controls.HamburgerMenu(); }
        private object Activate_129_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>(); }
        private object Activate_130_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Template10.Controls.HamburgerButtonInfo>(); }
        private object Activate_139_PageHeader() { return new global::Template10.Controls.PageHeader(); }
        private object Activate_143_NavButtonBehavior() { return new global::Template10.Behaviors.NavButtonBehavior(); }
        private object Activate_145_Resizer() { return new global::Template10.Controls.Resizer(); }
        private object Activate_148_ConsentValueConverter() { return new global::HealthCare.Win.Converter.ConsentValueConverter(); }
        private object Activate_149_SettingView() { return new global::HealthCare.Win.Views.HomeTab.SettingView(); }
        private object Activate_150_LoginViewModel() { return new global::HealthCare.Core.ViewModels.LoginViewModel(); }
        private object Activate_151_LoginView() { return new global::HealthCare.Win.Views.LoginView(); }
        private object Activate_152_ResetPassViewModel() { return new global::HealthCare.Core.ViewModels.ResetPassViewModel(); }
        private object Activate_153_ResetPassView() { return new global::HealthCare.Win.Views.ResetPassView(); }
        private object Activate_154_BoolVisValueConverter() { return new global::HealthCare.Core.Converters.BoolVisValueConverter(); }
        private object Activate_155_MvxBaseVisibilityValueConverter() { return new global::HealthCare.Core.MvxBaseVisibilityValueConverter<global::System.Boolean>(); }
        private object Activate_156_MvxValueConverter() { return new global::HealthCare.Core.MvxValueConverter<global::System.Boolean, global::Windows.UI.Xaml.Visibility>(); }
        private object Activate_157_ReverseBoolVisValueConverter() { return new global::HealthCare.Core.Converters.ReverseBoolVisValueConverter(); }
        private object Activate_158_ScheduleView() { return new global::HealthCare.Win.Views.HomeTab.ScheduleView(); }
        private object Activate_160_SignUpViewModel() { return new global::HealthCare.Core.ViewModels.SignUpViewModel(); }
        private object Activate_161_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.City>(); }
        private object Activate_162_City() { return new global::HealthCare.Core.Models.City(); }
        private object Activate_163_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.District>(); }
        private object Activate_164_District() { return new global::HealthCare.Core.Models.District(); }
        private object Activate_165_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.CheckupType>(); }
        private object Activate_166_CheckupType() { return new global::HealthCare.Core.Models.CheckupType(); }
        private object Activate_167_NameMap() { return new global::HealthCare.Core.Models.NameMap(); }
        private object Activate_168_List() { return new global::System.Collections.Generic.List<global::HealthCare.Core.Models.Gender>(); }
        private object Activate_169_Gender() { return new global::HealthCare.Core.Models.Gender(); }
        private object Activate_170_SignUpView() { return new global::HealthCare.Win.Views.SignUpView(); }
        private object Activate_171_UpdateProfileViewModel() { return new global::HealthCare.Core.ViewModels.UpdateProfileViewModel(); }
        private object Activate_172_UpdateProfileView() { return new global::HealthCare.Win.Views.UpdateProfileView(); }
        private void MapAdd_2_StateItems(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void MapAdd_3_Dictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_41_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.CmeClass>)instance;
            var newItem = (global::HealthCare.Core.Models.CmeClass)item;
            collection.Add(newItem);
        }
        private void VectorAdd_49_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.TopicFiles>)instance;
            var newItem = (global::HealthCare.Core.Models.TopicFiles)item;
            collection.Add(newItem);
        }
        private void VectorAdd_58_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_70_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.ConsultResponse>)instance;
            var newItem = (global::HealthCare.Core.Models.ConsultResponse)item;
            collection.Add(newItem);
        }
        private void VectorAdd_71_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.ConsultResponse>)instance;
            var newItem = (global::HealthCare.Core.Models.ConsultResponse)item;
            collection.Add(newItem);
        }
        private void VectorAdd_77_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_95_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Int32>)instance;
            var newItem = (global::System.Int32)item;
            collection.Add(newItem);
        }
        private void VectorAdd_97_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.Hospital>)instance;
            var newItem = (global::HealthCare.Core.Models.Hospital)item;
            collection.Add(newItem);
        }
        private void VectorAdd_99_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Double>)instance;
            var newItem = (global::System.Double)item;
            collection.Add(newItem);
        }
        private void VectorAdd_100_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_103_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>)instance;
            var newItem = (global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_109_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek>)instance;
            var newItem = (global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek)item;
            collection.Add(newItem);
        }
        private void VectorAdd_129_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Template10.Controls.HamburgerButtonInfo>)instance;
            var newItem = (global::Template10.Controls.HamburgerButtonInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_130_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Template10.Controls.HamburgerButtonInfo>)instance;
            var newItem = (global::Template10.Controls.HamburgerButtonInfo)item;
            collection.Add(newItem);
        }
        private void VectorAdd_161_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.City>)instance;
            var newItem = (global::HealthCare.Core.Models.City)item;
            collection.Add(newItem);
        }
        private void VectorAdd_163_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.District>)instance;
            var newItem = (global::HealthCare.Core.Models.District)item;
            collection.Add(newItem);
        }
        private void VectorAdd_165_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.CheckupType>)instance;
            var newItem = (global::HealthCare.Core.Models.CheckupType)item;
            collection.Add(newItem);
        }
        private void VectorAdd_168_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::HealthCare.Core.Models.Gender>)instance;
            var newItem = (global::HealthCare.Core.Models.Gender)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Template10.Common.BootStrapper
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Application"));
                userType.AddMemberName("SessionState");
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("SplashFactory");
                userType.AddMemberName("CacheMaxDuration");
                userType.AddMemberName("ShowShellBackButton");
                userType.AddMemberName("ForceShowShellBackButton");
                userType.AddMemberName("OriginalActivatedArgs");
                userType.AddMemberName("ModalDialog");
                userType.AddMemberName("ModalContent");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Application
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Template10.Common.StateItems
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.Dictionary`2<String, Object>"));
                userType.DictionaryAdd = MapAdd_2_StateItems;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  System.Collections.Generic.Dictionary`2<String, Object>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_Dictionary;
                userType.DictionaryAdd = MapAdd_3_Dictionary;
                xamlType = userType;
                break;

            case 4:   //  Object
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  String
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Template10.Services.NavigationService.INavigationService
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 8:   //  System.MulticastDelegate
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 9:   //  System.Delegate
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 10:   //  TimeSpan
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 11:   //  System.ValueType
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 12:   //  Boolean
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Windows.ApplicationModel.Activation.IActivatedEventArgs
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 14:   //  Template10.Controls.ModalDialog
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_14_ModalDialog;
                userType.AddMemberName("ModalBackground");
                userType.AddMemberName("IsModal");
                userType.AddMemberName("CanBackButtonDismiss");
                userType.AddMemberName("DisableBackButtonWhenModal");
                userType.AddMemberName("ModalContent");
                userType.AddMemberName("ModalTransitions");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  HealthCare.Win.RootCommand
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_RootCommand;
                userType.AddMemberName("CallCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  Template10.Mvvm.MvxCommand
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Color
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 20:   //  Byte
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  HealthCare.Win.Converter.ItemClickedConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_21_ItemClickedConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  HealthCare.Win.Converter.SourceToVisibilityConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_22_SourceToVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  HealthCare.Core.Resources.LocalizedStrings
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_LocalizedStrings;
                userType.AddMemberName("LocalizedResources");
                xamlType = userType;
                break;

            case 24:   //  HealthCare.Core.Resources.AppResources
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  HealthCare.Win.Controls.BusyIndicator
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_25_BusyIndicator;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  HealthCare.Win.Controls.NumberPicker
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_27_NumberPicker;
                userType.AddMemberName("Value");
                userType.AddMemberName("MinValue");
                userType.AddMemberName("MaxValue");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Int32
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  HealthCare.Win.Controls.TabHeader
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_29_TabHeader;
                userType.AddMemberName("Glyph");
                userType.AddMemberName("Label");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  HealthCare.Core.Converters.MilisecondToDateValueConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MvxValueConverter`2<Int64, String>"));
                userType.Activator = Activate_30_MilisecondToDateValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  HealthCare.Core.MvxValueConverter`2<Int64, String>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_31_MvxValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  HealthCare.Core.ViewModels.CheckupViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_32_CheckupViewModel;
                userType.AddMemberName("Checkup");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  Template10.Mvvm.ViewModelBase
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.BindableBase"));
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("Dispatcher");
                userType.AddMemberName("SessionState");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  Template10.Mvvm.BindableBase
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  HealthCare.Core.Models.Checkup
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  Template10.Common.IDispatcherWrapper
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  Template10.Common.IStateItems
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  HealthCare.Win.Views.CheckupView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_CheckupView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  HealthCare.Core.ViewModels.CmeSearchViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_40_CmeSearchViewModel;
                userType.AddMemberName("SearchTerm");
                userType.AddMemberName("CmeClasses");
                userType.AddMemberName("SearchCommand");
                userType.AddMemberName("CmeClassCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.CmeClass>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_41_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  HealthCare.Core.Models.CmeClass
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_CmeClass;
                userType.AddMemberName("class_name");
                userType.AddMemberName("current_url");
                userType.AddMemberName("id");
                userType.AddMemberName("short_description");
                userType.AddMemberName("topic_name");
                userType.AddMemberName("full_description");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.CmeClass>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  HealthCare.Win.Controls.ListViewBase
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Command");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  System.Windows.Input.ICommand
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  HealthCare.Win.Views.CmeSearchView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_CmeSearchView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  HealthCare.Core.ViewModels.WeekTopicFileViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_48_WeekTopicFileViewModel;
                userType.AddMemberName("TopicFiles");
                userType.AddMemberName("TopicFile");
                userType.AddMemberName("Topic");
                userType.AddMemberName("SelectedTopic");
                userType.AddMemberName("ShowFileTopicCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.TopicFiles>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_49_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 50:   //  HealthCare.Core.Models.TopicFiles
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_50_TopicFiles;
                userType.AddMemberName("FileName");
                userType.AddMemberName("FileUri");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  HealthCare.Core.Models.Topic
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.TopicFiles>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  HealthCare.Win.Views.WeekTopicFileView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_WeekTopicFileView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  HealthCare.Core.ViewModels.CmeCategoryViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_54_CmeCategoryViewModel;
                userType.AddMemberName("CmeCategory");
                userType.AddMemberName("CmeClassCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  HealthCare.Core.Models.CmeCategory
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MyNotifyPropertyChanged"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  HealthCare.Core.MyNotifyPropertyChanged
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 58:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_58_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 59:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 60:   //  HealthCare.Win.Controls.GridAdaptiveBehavior
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ItemsWrapGrid>"));
                userType.Activator = Activate_60_GridAdaptiveBehavior;
                userType.AddMemberName("ItemMaxHeight");
                userType.AddMemberName("ItemMinWidth");
                userType.AddMemberName("Ratio");
                userType.AddMemberName("ItemMaxWidth");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ItemsWrapGrid>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 62:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 63:   //  Double
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Windows.UI.Xaml.Controls.ItemsWrapGrid
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 65:   //  HealthCare.Win.Views.CmeCategoryView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_65_CmeCategoryView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 66:   //  HealthCare.Core.ViewModels.CmeClassViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_66_CmeClassViewModel;
                userType.AddMemberName("CmeClass");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  HealthCare.Win.Views.CmeClassView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_67_CmeClassView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  HealthCare.Core.ViewModels.ConsultViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_68_ConsultViewModel;
                userType.AddMemberName("InviteCommand");
                userType.AddMemberName("Request");
                userType.AddMemberName("Responses");
                userType.AddMemberName("InviteMessage");
                userType.AddMemberName("Email");
                userType.AddMemberName("ImageZoomCommand");
                userType.AddMemberName("ShowInviteCommand");
                userType.AddMemberName("ShowReplyCommand");
                userType.AddMemberName("ReplyCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 69:   //  HealthCare.Core.Models.ConsultRequest
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MyNotifyPropertyChanged"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 70:   //  System.Collections.ObjectModel.ObservableCollection`1<HealthCare.Core.Models.ConsultResponse>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<HealthCare.Core.Models.ConsultResponse>"));
                userType.CollectionAdd = VectorAdd_70_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 71:   //  System.Collections.ObjectModel.Collection`1<HealthCare.Core.Models.ConsultResponse>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_71_Collection;
                userType.CollectionAdd = VectorAdd_71_Collection;
                xamlType = userType;
                break;

            case 72:   //  HealthCare.Core.Models.ConsultResponse
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MyNotifyPropertyChanged"));
                userType.Activator = Activate_72_ConsultResponse;
                userType.AddMemberName("id");
                userType.AddMemberName("supportRequestId");
                userType.AddMemberName("comment");
                userType.AddMemberName("status");
                userType.AddMemberName("whenCreated");
                userType.AddMemberName("doctor");
                userType.AddMemberName("createdByUserId");
                userType.AddMemberName("IndexString");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 73:   //  Int64
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 74:   //  HealthCare.Core.Models.Doctor
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.Models.SignUpInfo"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 75:   //  HealthCare.Core.Models.SignUpInfo
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MyNotifyPropertyChanged"));
                userType.Activator = Activate_75_SignUpInfo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 76:   //  Template10.Behaviors.EventTriggerBehaviorBase
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.Activator = Activate_76_EventTriggerBehaviorBase;
                userType.SetContentPropertyName("Template10.Behaviors.EventTriggerBehaviorBase.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_77_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  HealthCare.Win.Controls.ShowDialogAction
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_78_ShowDialogAction;
                userType.AddMemberName("Dialog");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 79:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 80:   //  HealthCare.Win.Views.ConsultView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_80_ConsultView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 81:   //  HealthCare.Win.Views.HomeTab.ChbaseView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_81_ChbaseView;
                userType.AddMemberName("RootWebView");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 82:   //  Windows.UI.Xaml.Controls.WebView
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 83:   //  HealthCare.Core.Converters.WeekTopicStatusValueConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MvxValueConverter"));
                userType.Activator = Activate_83_WeekTopicStatusValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 84:   //  HealthCare.Core.MvxValueConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_84_MvxValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 85:   //  HealthCare.Win.Controls.DataRequestBehavior
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ListViewBase>"));
                userType.Activator = Activate_85_DataRequestBehavior;
                userType.AddMemberName("ItemsSource");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 86:   //  Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ListViewBase>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 87:   //  Windows.UI.Xaml.Controls.ListViewBase
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 88:   //  HealthCare.Win.Views.HomeTab.CheckupsView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_88_CheckupsView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 89:   //  HealthCare.Core.ViewModels.HomeViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 90:   //  HealthCare.Win.Views.HomeTab.CmeLibraryView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_90_CmeLibraryView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 91:   //  HealthCare.Win.Views.HomeTab.ConsultView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_91_ConsultView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 92:   //  HealthCare.Win.Views.HomeTab.WeekTopicView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_92_WeekTopicView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 93:   //  HealthCare.Win.Converter.DateTimeConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_93_DateTimeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  HealthCare.Core.ViewModels.ScheduleAddingViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_94_ScheduleAddingViewModel;
                userType.AddMemberName("Weeks");
                userType.AddMemberName("CurrentDate");
                userType.AddMemberName("RefreshCommand");
                userType.AddMemberName("Hospitals");
                userType.AddMemberName("Hospital");
                userType.AddMemberName("StartTime");
                userType.AddMemberName("DaySource");
                userType.AddMemberName("EndTime");
                userType.AddMemberName("SaveCommand");
                userType.AddMemberName("Quality");
                userType.AddMemberName("DayOfWeeks");
                userType.AddMemberName("BoolDoctorDayofWeeks");
                userType.AddMemberName("ListBoolDoctorDayofWeek");
                userType.AddMemberName("EndDate");
                userType.AddMemberName("WeekCount");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 95:   //  System.Collections.Generic.List`1<Int32>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_95_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 96:   //  System.DateTime
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 97:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.Hospital>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_97_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 98:   //  HealthCare.Core.Models.Hospital
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_98_Hospital;
                userType.AddMemberName("HospitalId");
                userType.AddMemberName("Id");
                userType.AddMemberName("ParentId");
                userType.AddMemberName("Code");
                userType.AddMemberName("Name");
                userType.AddMemberName("Address");
                userType.AddMemberName("Location");
                userType.AddMemberName("Phones");
                userType.AddMemberName("Emails");
                userType.AddMemberName("SchedulingFee");
                userType.AddMemberName("CheckupFee");
                userType.AddMemberName("Photos");
                userType.AddMemberName("CheckupTypeIds");
                userType.AddMemberName("ScbMid");
                userType.AddMemberName("ScbTid");
                userType.AddMemberName("Status");
                userType.AddMemberName("CityId");
                userType.AddMemberName("DistrictId");
                userType.AddMemberName("IsFamousHospital");
                userType.AddMemberName("IsCLASHospital");
                userType.AddMemberName("AdminUsers");
                userType.AddMemberName("ClassharePercent");
                userType.AddMemberName("Roles");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  System.Collections.Generic.List`1<Double>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_99_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 100:   //  System.Collections.Generic.List`1<String>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_100_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 101:   //  HealthCare.Core.Models.Photos
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 102:   //  System.Nullable`1<System.DateTime>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 103:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_103_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 104:   //  HealthCare.Core.Models.Enums.DoctorDayOfWeekObject
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_104_DoctorDayOfWeekObject;
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 105:   //  HealthCare.Core.Models.Enums.DoctorDayOfWeek
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Sunday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Sunday);
                userType.AddEnumValue("Monday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Monday);
                userType.AddEnumValue("Tuesday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Tuesday);
                userType.AddEnumValue("Wednesday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Wednesday);
                userType.AddEnumValue("Thursday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Thursday);
                userType.AddEnumValue("Friday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Friday);
                userType.AddEnumValue("Saturday", global::HealthCare.Core.Models.Enums.DoctorDayOfWeek.Saturday);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 106:   //  System.Enum
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 107:   //  HealthCare.Core.Models.Enums.DoctorDayOfWeek[]
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 108:   //  System.Array
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 109:   //  System.Collections.Generic.List`1<HealthCare.Core.ViewModels.BoolDoctorDayofWeek>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_109_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 110:   //  HealthCare.Core.ViewModels.BoolDoctorDayofWeek
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MyNotifyPropertyChanged"));
                userType.Activator = Activate_110_BoolDoctorDayofWeek;
                userType.AddMemberName("isSelected");
                userType.AddMemberName("DoctorDayOfWeek");
                userType.AddMemberName("SelectDayString");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 111:   //  HealthCare.Core.ViewModels.ListBoolDoctorDayofWeek
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MyNotifyPropertyChanged"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 112:   //  HealthCare.Win.Views.ScheduleAddingView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_112_ScheduleAddingView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 113:   //  HealthCare.Core.ViewModels.SetPasswordViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_113_SetPasswordViewModel;
                userType.AddMemberName("OldPassword");
                userType.AddMemberName("NewPassword");
                userType.AddMemberName("ConfirmPassword");
                userType.AddMemberName("SetPasswordCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 114:   //  HealthCare.Win.Views.SetPasswordView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_114_SetPasswordView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 115:   //  Microsoft.Xaml.Interactions.Core.DataTriggerBehavior
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.Activator = Activate_115_DataTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("Binding");
                userType.AddMemberName("Value");
                userType.AddMemberName("ComparisonCondition");
                xamlType = userType;
                break;

            case 116:   //  Microsoft.Xaml.Interactions.Core.ComparisonConditionType
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equal", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.Equal);
                userType.AddEnumValue("NotEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.NotEqual);
                userType.AddEnumValue("LessThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThan);
                userType.AddEnumValue("GreaterThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThanOrEqual);
                xamlType = userType;
                break;

            case 117:   //  Template10.Behaviors.ConditionalAction
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_117_ConditionalAction;
                userType.SetContentPropertyName("Template10.Behaviors.ConditionalAction.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("LeftValue");
                userType.AddMemberName("Operator");
                userType.AddMemberName("RightValue");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 118:   //  Template10.Behaviors.ConditionalAction.Operators
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("EqualToRight", global::Template10.Behaviors.ConditionalAction.Operators.EqualToRight);
                userType.AddEnumValue("NotEqualToRight", global::Template10.Behaviors.ConditionalAction.Operators.NotEqualToRight);
                userType.AddEnumValue("LessThanRight", global::Template10.Behaviors.ConditionalAction.Operators.LessThanRight);
                userType.AddEnumValue("LessThanOrEqualToRight", global::Template10.Behaviors.ConditionalAction.Operators.LessThanOrEqualToRight);
                userType.AddEnumValue("GreaterThanRight", global::Template10.Behaviors.ConditionalAction.Operators.GreaterThanRight);
                userType.AddEnumValue("GreaterThanOrEqualToRight", global::Template10.Behaviors.ConditionalAction.Operators.GreaterThanOrEqualToRight);
                userType.AddEnumValue("IsNull", global::Template10.Behaviors.ConditionalAction.Operators.IsNull);
                userType.AddEnumValue("IsNotNull", global::Template10.Behaviors.ConditionalAction.Operators.IsNotNull);
                userType.AddEnumValue("IsTrue", global::Template10.Behaviors.ConditionalAction.Operators.IsTrue);
                userType.AddEnumValue("IsFalse", global::Template10.Behaviors.ConditionalAction.Operators.IsFalse);
                userType.AddEnumValue("IsNullOrEmpty", global::Template10.Behaviors.ConditionalAction.Operators.IsNullOrEmpty);
                userType.AddEnumValue("IsNotNullOrEmpty", global::Template10.Behaviors.ConditionalAction.Operators.IsNotNullOrEmpty);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 119:   //  Microsoft.Xaml.Interactions.Core.ChangePropertyAction
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_119_ChangePropertyAction;
                userType.AddMemberName("PropertyName");
                userType.AddMemberName("TargetObject");
                userType.AddMemberName("Value");
                xamlType = userType;
                break;

            case 120:   //  Windows.UI.Xaml.PropertyPath
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 121:   //  Template10.Controls.HamburgerButtonInfo
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.DependencyBindableBase"));
                userType.Activator = Activate_121_HamburgerButtonInfo;
                userType.SetContentPropertyName("Template10.Controls.HamburgerButtonInfo.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("ButtonType");
                userType.AddMemberName("NavigationTransitionInfo");
                userType.AddMemberName("PageType");
                userType.AddMemberName("PageParameter");
                userType.AddMemberName("ClearHistory");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("IsChecked");
                userType.AddMemberName("MaxWidth");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 122:   //  Template10.Mvvm.DependencyBindableBase
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 123:   //  Template10.Controls.HamburgerButtonInfo.ButtonTypes
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Toggle", global::Template10.Controls.HamburgerButtonInfo.ButtonTypes.Toggle);
                userType.AddEnumValue("Command", global::Template10.Controls.HamburgerButtonInfo.ButtonTypes.Command);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 124:   //  Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 125:   //  System.Type
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 126:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 127:   //  System.Nullable`1<Boolean>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 128:   //  Template10.Controls.HamburgerMenu
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_128_HamburgerMenu;
                userType.SetContentPropertyName("Template10.Controls.HamburgerMenu.PrimaryButtons");
                userType.AddMemberName("PrimaryButtons");
                userType.AddMemberName("NavAreaBackground");
                userType.AddMemberName("NavButtonForeground");
                userType.AddMemberName("NavButtonCheckedBackground");
                userType.AddMemberName("NavButtonBackground");
                userType.AddMemberName("NavButtonHoverBackground");
                userType.AddMemberName("NavButtonPressedBackground");
                userType.AddMemberName("HamburgerBackground");
                userType.AddMemberName("HamburgerForeground");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("NavCommand");
                userType.AddMemberName("VisualStateNarrowMinWidth");
                userType.AddMemberName("VisualStateNormalMinWidth");
                userType.AddMemberName("VisualStateWideMinWidth");
                userType.AddMemberName("SecondaryButtonOrientation");
                userType.AddMemberName("AccentColor");
                userType.AddMemberName("HamburgerButtonVisibility");
                userType.AddMemberName("SecondarySeparator");
                userType.AddMemberName("PaneBorderBrush");
                userType.AddMemberName("NavButtonCheckedForeground");
                userType.AddMemberName("Selected");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("NavigationService");
                userType.AddMemberName("IsFullScreen");
                userType.AddMemberName("SecondaryButtons");
                userType.AddMemberName("PaneWidth");
                userType.AddMemberName("PaneBorderThickness");
                userType.AddMemberName("HeaderContent");
                userType.AddMemberName("HamburgerButtonGridWidth");
                userType.AddMemberName("OpenCloseMode");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 129:   //  System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Template10.Controls.HamburgerButtonInfo>"));
                userType.CollectionAdd = VectorAdd_129_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 130:   //  System.Collections.ObjectModel.Collection`1<Template10.Controls.HamburgerButtonInfo>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_130_Collection;
                userType.CollectionAdd = VectorAdd_130_Collection;
                xamlType = userType;
                break;

            case 131:   //  Windows.UI.Xaml.Media.SolidColorBrush
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 132:   //  Windows.UI.Xaml.Controls.SplitViewDisplayMode
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 133:   //  Template10.Mvvm.MvxCommand`1<Template10.Controls.HamburgerButtonInfo>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 134:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 135:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 136:   //  Template10.Controls.HamburgerMenu.OpenCloseModes
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Template10.Controls.HamburgerMenu.OpenCloseModes.None);
                userType.AddEnumValue("Auto", global::Template10.Controls.HamburgerMenu.OpenCloseModes.Auto);
                userType.AddEnumValue("Tap", global::Template10.Controls.HamburgerMenu.OpenCloseModes.Tap);
                userType.AddEnumValue("Swipe", global::Template10.Controls.HamburgerMenu.OpenCloseModes.Swipe);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 137:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 138:   //  Windows.UI.Xaml.Media.Animation.TransitionCollection
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 139:   //  Template10.Controls.PageHeader
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.CommandBar"));
                userType.Activator = Activate_139_PageHeader;
                userType.AddMemberName("BackButtonVisibility");
                userType.AddMemberName("BackButtonContent");
                userType.AddMemberName("Frame");
                userType.AddMemberName("VisualStateNarrowMinWidth");
                userType.AddMemberName("VisualStateNormalMinWidth");
                userType.AddMemberName("Text");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 140:   //  Windows.UI.Xaml.Controls.CommandBar
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 141:   //  Windows.UI.Xaml.Controls.Symbol
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 142:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 143:   //  Template10.Behaviors.NavButtonBehavior
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_143_NavButtonBehavior;
                userType.AddMemberName("Direction");
                userType.AddMemberName("Frame");
                userType.AddMemberName("AssociatedObject");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 144:   //  Template10.Behaviors.NavButtonBehavior.Directions
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Back", global::Template10.Behaviors.NavButtonBehavior.Directions.Back);
                userType.AddEnumValue("Forward", global::Template10.Behaviors.NavButtonBehavior.Directions.Forward);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 145:   //  Template10.Controls.Resizer
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_145_Resizer;
                userType.SetContentPropertyName("Template10.Controls.Resizer.ElementControl");
                userType.AddMemberName("ElementControl");
                userType.AddMemberName("GrabberBrush");
                userType.AddMemberName("GrabberVisibility");
                userType.AddMemberName("GrabberSize");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 146:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 147:   //  Windows.Foundation.Size
                xamlType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 148:   //  HealthCare.Win.Converter.ConsentValueConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_148_ConsentValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 149:   //  HealthCare.Win.Views.HomeTab.SettingView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_149_SettingView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 150:   //  HealthCare.Core.ViewModels.LoginViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_150_LoginViewModel;
                userType.AddMemberName("UserName");
                userType.AddMemberName("Password");
                userType.AddMemberName("Remember");
                userType.AddMemberName("LoginCommand");
                userType.AddMemberName("SignUpCommand");
                userType.AddMemberName("ResetCommand");
                userType.AddMemberName("Loading");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 151:   //  HealthCare.Win.Views.LoginView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_151_LoginView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 152:   //  HealthCare.Core.ViewModels.ResetPassViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_152_ResetPassViewModel;
                userType.AddMemberName("Email");
                userType.AddMemberName("ResetPassCommand");
                userType.AddMemberName("BackCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 153:   //  HealthCare.Win.Views.ResetPassView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_153_ResetPassView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 154:   //  HealthCare.Core.Converters.BoolVisValueConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MvxBaseVisibilityValueConverter`1<Boolean>"));
                userType.Activator = Activate_154_BoolVisValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 155:   //  HealthCare.Core.MvxBaseVisibilityValueConverter`1<Boolean>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MvxValueConverter`2<Boolean, Windows.UI.Xaml.Visibility>"));
                userType.Activator = Activate_155_MvxBaseVisibilityValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 156:   //  HealthCare.Core.MvxValueConverter`2<Boolean, Windows.UI.Xaml.Visibility>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_156_MvxValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 157:   //  HealthCare.Core.Converters.ReverseBoolVisValueConverter
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("HealthCare.Core.MvxBaseVisibilityValueConverter`1<Boolean>"));
                userType.Activator = Activate_157_ReverseBoolVisValueConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 158:   //  HealthCare.Win.Views.HomeTab.ScheduleView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_158_ScheduleView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 159:   //  HealthCare.Win.Views.Shell
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 160:   //  HealthCare.Core.ViewModels.SignUpViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_160_SignUpViewModel;
                userType.AddMemberName("Loading");
                userType.AddMemberName("Account");
                userType.AddMemberName("Cities");
                userType.AddMemberName("CheckupTypes");
                userType.AddMemberName("SignUpCommand");
                userType.AddMemberName("BackCommand");
                userType.AddMemberName("Districts");
                userType.AddMemberName("Genders");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 161:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.City>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_161_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 162:   //  HealthCare.Core.Models.City
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_162_City;
                userType.AddMemberName("Id");
                userType.AddMemberName("Name");
                userType.AddMemberName("IsUsedForDoctorSearch");
                userType.AddMemberName("Districts");
                userType.AddMemberName("DistrictNames");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 163:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.District>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_163_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 164:   //  HealthCare.Core.Models.District
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_164_District;
                userType.AddMemberName("Id");
                userType.AddMemberName("CityId");
                userType.AddMemberName("Name");
                userType.AddMemberName("Location");
                userType.AddMemberName("City");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 165:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.CheckupType>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_165_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 166:   //  HealthCare.Core.Models.CheckupType
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_166_CheckupType;
                userType.AddMemberName("Id");
                userType.AddMemberName("Name");
                userType.AddMemberName("HospitalId");
                userType.AddMemberName("Status");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 167:   //  HealthCare.Core.Models.NameMap
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 168:   //  System.Collections.Generic.List`1<HealthCare.Core.Models.Gender>
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_168_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 169:   //  HealthCare.Core.Models.Gender
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_169_Gender;
                userType.AddMemberName("IsFemale");
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 170:   //  HealthCare.Win.Views.SignUpView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_170_SignUpView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 171:   //  HealthCare.Core.ViewModels.UpdateProfileViewModel
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Template10.Mvvm.ViewModelBase"));
                userType.Activator = Activate_171_UpdateProfileViewModel;
                userType.AddMemberName("GenderCommand");
                userType.AddMemberName("SaveCommand");
                userType.AddMemberName("Loading");
                userType.AddMemberName("Genders");
                userType.AddMemberName("Account");
                userType.AddMemberName("Cities");
                userType.AddMemberName("Districts");
                userType.AddMemberName("CheckupTypes");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 172:   //  HealthCare.Win.Views.UpdateProfileView
                userType = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_172_UpdateProfileView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Acr.UserDialogs.Acr_UserDialogs_Uwp_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Coding4Fun.Toolkit.Controls.Coding4Fun_Toolkit_Controls__Win8_1__XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_BootStrapper_SessionState(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.SessionState;
        }
        private void set_0_BootStrapper_SessionState(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.SessionState = (global::Template10.Common.StateItems)Value;
        }
        private object get_1_BootStrapper_NavigationService(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.NavigationService;
        }
        private object get_2_BootStrapper_SplashFactory(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.SplashFactory;
        }
        private object get_3_BootStrapper_CacheMaxDuration(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.CacheMaxDuration;
        }
        private void set_3_BootStrapper_CacheMaxDuration(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.CacheMaxDuration = (global::System.TimeSpan)Value;
        }
        private object get_4_BootStrapper_ShowShellBackButton(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ShowShellBackButton;
        }
        private void set_4_BootStrapper_ShowShellBackButton(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ShowShellBackButton = (global::System.Boolean)Value;
        }
        private object get_5_BootStrapper_ForceShowShellBackButton(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ForceShowShellBackButton;
        }
        private void set_5_BootStrapper_ForceShowShellBackButton(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ForceShowShellBackButton = (global::System.Boolean)Value;
        }
        private object get_6_BootStrapper_OriginalActivatedArgs(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.OriginalActivatedArgs;
        }
        private object get_7_BootStrapper_ModalDialog(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ModalDialog;
        }
        private object get_8_BootStrapper_ModalContent(object instance)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            return that.ModalContent;
        }
        private void set_8_BootStrapper_ModalContent(object instance, object Value)
        {
            var that = (global::Template10.Common.BootStrapper)instance;
            that.ModalContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_9_RootCommand_CallCommand(object instance)
        {
            var that = (global::HealthCare.Win.RootCommand)instance;
            return that.CallCommand;
        }
        private object get_10_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_10_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_11_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_11_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_12_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_12_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_13_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_13_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_14_LocalizedStrings_LocalizedResources(object instance)
        {
            var that = (global::HealthCare.Core.Resources.LocalizedStrings)instance;
            return that.LocalizedResources;
        }
        private object get_15_NumberPicker_Value(object instance)
        {
            var that = (global::HealthCare.Win.Controls.NumberPicker)instance;
            return that.Value;
        }
        private void set_15_NumberPicker_Value(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.NumberPicker)instance;
            that.Value = (global::System.Int32)Value;
        }
        private object get_16_NumberPicker_MinValue(object instance)
        {
            var that = (global::HealthCare.Win.Controls.NumberPicker)instance;
            return that.MinValue;
        }
        private void set_16_NumberPicker_MinValue(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.NumberPicker)instance;
            that.MinValue = (global::System.Int32)Value;
        }
        private object get_17_NumberPicker_MaxValue(object instance)
        {
            var that = (global::HealthCare.Win.Controls.NumberPicker)instance;
            return that.MaxValue;
        }
        private void set_17_NumberPicker_MaxValue(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.NumberPicker)instance;
            that.MaxValue = (global::System.Int32)Value;
        }
        private object get_18_TabHeader_Glyph(object instance)
        {
            var that = (global::HealthCare.Win.Controls.TabHeader)instance;
            return that.Glyph;
        }
        private void set_18_TabHeader_Glyph(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.TabHeader)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_19_TabHeader_Label(object instance)
        {
            var that = (global::HealthCare.Win.Controls.TabHeader)instance;
            return that.Label;
        }
        private void set_19_TabHeader_Label(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.TabHeader)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_20_CheckupViewModel_Checkup(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CheckupViewModel)instance;
            return that.Checkup;
        }
        private void set_20_CheckupViewModel_Checkup(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.CheckupViewModel)instance;
            that.Checkup = (global::HealthCare.Core.Models.Checkup)Value;
        }
        private object get_21_ViewModelBase_NavigationService(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.NavigationService;
        }
        private void set_21_ViewModelBase_NavigationService(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.NavigationService = (global::Template10.Services.NavigationService.INavigationService)Value;
        }
        private object get_22_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.Dispatcher;
        }
        private void set_22_ViewModelBase_Dispatcher(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.Dispatcher = (global::Template10.Common.IDispatcherWrapper)Value;
        }
        private object get_23_ViewModelBase_SessionState(object instance)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            return that.SessionState;
        }
        private void set_23_ViewModelBase_SessionState(object instance, object Value)
        {
            var that = (global::Template10.Mvvm.ViewModelBase)instance;
            that.SessionState = (global::Template10.Common.IStateItems)Value;
        }
        private object get_24_CmeSearchViewModel_SearchTerm(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeSearchViewModel)instance;
            return that.SearchTerm;
        }
        private void set_24_CmeSearchViewModel_SearchTerm(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeSearchViewModel)instance;
            that.SearchTerm = (global::System.String)Value;
        }
        private object get_25_CmeSearchViewModel_CmeClasses(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeSearchViewModel)instance;
            return that.CmeClasses;
        }
        private void set_25_CmeSearchViewModel_CmeClasses(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeSearchViewModel)instance;
            that.CmeClasses = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.CmeClass>)Value;
        }
        private object get_26_CmeClass_class_name(object instance)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            return that.class_name;
        }
        private void set_26_CmeClass_class_name(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            that.class_name = (global::System.String)Value;
        }
        private object get_27_CmeClass_current_url(object instance)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            return that.current_url;
        }
        private void set_27_CmeClass_current_url(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            that.current_url = (global::System.String)Value;
        }
        private object get_28_CmeClass_id(object instance)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            return that.id;
        }
        private void set_28_CmeClass_id(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            that.id = (global::System.String)Value;
        }
        private object get_29_CmeClass_short_description(object instance)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            return that.short_description;
        }
        private void set_29_CmeClass_short_description(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            that.short_description = (global::System.String)Value;
        }
        private object get_30_CmeClass_topic_name(object instance)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            return that.topic_name;
        }
        private void set_30_CmeClass_topic_name(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            that.topic_name = (global::System.String)Value;
        }
        private object get_31_CmeClass_full_description(object instance)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            return that.full_description;
        }
        private void set_31_CmeClass_full_description(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CmeClass)instance;
            that.full_description = (global::System.String)Value;
        }
        private object get_32_CmeSearchViewModel_SearchCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeSearchViewModel)instance;
            return that.SearchCommand;
        }
        private object get_33_CmeSearchViewModel_CmeClassCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeSearchViewModel)instance;
            return that.CmeClassCommand;
        }
        private object get_34_ListViewBase_Command(object instance)
        {
            return global::HealthCare.Win.Controls.ListViewBase.GetCommand((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_34_ListViewBase_Command(object instance, object Value)
        {
            global::HealthCare.Win.Controls.ListViewBase.SetCommand((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Windows.Input.ICommand)Value);
        }
        private object get_35_WeekTopicFileViewModel_TopicFiles(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            return that.TopicFiles;
        }
        private void set_35_WeekTopicFileViewModel_TopicFiles(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            that.TopicFiles = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.TopicFiles>)Value;
        }
        private object get_36_TopicFiles_FileName(object instance)
        {
            var that = (global::HealthCare.Core.Models.TopicFiles)instance;
            return that.FileName;
        }
        private void set_36_TopicFiles_FileName(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.TopicFiles)instance;
            that.FileName = (global::System.String)Value;
        }
        private object get_37_TopicFiles_FileUri(object instance)
        {
            var that = (global::HealthCare.Core.Models.TopicFiles)instance;
            return that.FileUri;
        }
        private void set_37_TopicFiles_FileUri(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.TopicFiles)instance;
            that.FileUri = (global::System.String)Value;
        }
        private object get_38_WeekTopicFileViewModel_TopicFile(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            return that.TopicFile;
        }
        private void set_38_WeekTopicFileViewModel_TopicFile(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            that.TopicFile = (global::HealthCare.Core.Models.TopicFiles)Value;
        }
        private object get_39_WeekTopicFileViewModel_Topic(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            return that.Topic;
        }
        private void set_39_WeekTopicFileViewModel_Topic(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            that.Topic = (global::HealthCare.Core.Models.Topic)Value;
        }
        private object get_40_WeekTopicFileViewModel_SelectedTopic(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            return that.SelectedTopic;
        }
        private void set_40_WeekTopicFileViewModel_SelectedTopic(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            that.SelectedTopic = (global::HealthCare.Core.Models.TopicFiles)Value;
        }
        private object get_41_WeekTopicFileViewModel_ShowFileTopicCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.WeekTopicFileViewModel)instance;
            return that.ShowFileTopicCommand;
        }
        private object get_42_CmeCategoryViewModel_CmeCategory(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeCategoryViewModel)instance;
            return that.CmeCategory;
        }
        private void set_42_CmeCategoryViewModel_CmeCategory(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeCategoryViewModel)instance;
            that.CmeCategory = (global::HealthCare.Core.Models.CmeCategory)Value;
        }
        private object get_43_CmeCategoryViewModel_CmeClassCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeCategoryViewModel)instance;
            return that.CmeClassCommand;
        }
        private object get_44_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_44_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_45_GridAdaptiveBehavior_ItemMaxHeight(object instance)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            return that.ItemMaxHeight;
        }
        private void set_45_GridAdaptiveBehavior_ItemMaxHeight(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            that.ItemMaxHeight = (global::System.Double)Value;
        }
        private object get_46_GridAdaptiveBehavior_ItemMinWidth(object instance)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            return that.ItemMinWidth;
        }
        private void set_46_GridAdaptiveBehavior_ItemMinWidth(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            that.ItemMinWidth = (global::System.Double)Value;
        }
        private object get_47_GridAdaptiveBehavior_Ratio(object instance)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            return that.Ratio;
        }
        private void set_47_GridAdaptiveBehavior_Ratio(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            that.Ratio = (global::System.Double)Value;
        }
        private object get_48_GridAdaptiveBehavior_ItemMaxWidth(object instance)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            return that.ItemMaxWidth;
        }
        private void set_48_GridAdaptiveBehavior_ItemMaxWidth(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.GridAdaptiveBehavior)instance;
            that.ItemMaxWidth = (global::System.Double)Value;
        }
        private object get_49_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.ItemsWrapGrid>)instance;
            return that.AssociatedObject;
        }
        private object get_50_CmeClassViewModel_CmeClass(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeClassViewModel)instance;
            return that.CmeClass;
        }
        private void set_50_CmeClassViewModel_CmeClass(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.CmeClassViewModel)instance;
            that.CmeClass = (global::HealthCare.Core.Models.CmeClass)Value;
        }
        private object get_51_ConsultViewModel_InviteCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.InviteCommand;
        }
        private object get_52_ConsultViewModel_Request(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.Request;
        }
        private void set_52_ConsultViewModel_Request(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            that.Request = (global::HealthCare.Core.Models.ConsultRequest)Value;
        }
        private object get_53_ConsultViewModel_Responses(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.Responses;
        }
        private void set_53_ConsultViewModel_Responses(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            that.Responses = (global::System.Collections.ObjectModel.ObservableCollection<global::HealthCare.Core.Models.ConsultResponse>)Value;
        }
        private object get_54_ConsultResponse_id(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.id;
        }
        private void set_54_ConsultResponse_id(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.id = (global::System.String)Value;
        }
        private object get_55_ConsultResponse_supportRequestId(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.supportRequestId;
        }
        private void set_55_ConsultResponse_supportRequestId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.supportRequestId = (global::System.String)Value;
        }
        private object get_56_ConsultResponse_comment(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.comment;
        }
        private void set_56_ConsultResponse_comment(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.comment = (global::System.String)Value;
        }
        private object get_57_ConsultResponse_status(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.status;
        }
        private void set_57_ConsultResponse_status(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.status = (global::System.Int32)Value;
        }
        private object get_58_ConsultResponse_whenCreated(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.whenCreated;
        }
        private void set_58_ConsultResponse_whenCreated(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.whenCreated = (global::System.Int64)Value;
        }
        private object get_59_ConsultResponse_doctor(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.doctor;
        }
        private void set_59_ConsultResponse_doctor(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.doctor = (global::HealthCare.Core.Models.Doctor)Value;
        }
        private object get_60_ConsultResponse_createdByUserId(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.createdByUserId;
        }
        private void set_60_ConsultResponse_createdByUserId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.createdByUserId = (global::System.String)Value;
        }
        private object get_61_ConsultResponse_IndexString(object instance)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            return that.IndexString;
        }
        private void set_61_ConsultResponse_IndexString(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.ConsultResponse)instance;
            that.IndexString = (global::System.String)Value;
        }
        private object get_62_ConsultViewModel_InviteMessage(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.InviteMessage;
        }
        private void set_62_ConsultViewModel_InviteMessage(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            that.InviteMessage = (global::System.String)Value;
        }
        private object get_63_ConsultViewModel_Email(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.Email;
        }
        private void set_63_ConsultViewModel_Email(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            that.Email = (global::System.String)Value;
        }
        private object get_64_ConsultViewModel_ImageZoomCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.ImageZoomCommand;
        }
        private object get_65_ConsultViewModel_ShowInviteCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.ShowInviteCommand;
        }
        private object get_66_ConsultViewModel_ShowReplyCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.ShowReplyCommand;
        }
        private object get_67_ConsultViewModel_ReplyCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ConsultViewModel)instance;
            return that.ReplyCommand;
        }
        private object get_68_EventTriggerBehaviorBase_Actions(object instance)
        {
            var that = (global::Template10.Behaviors.EventTriggerBehaviorBase)instance;
            return that.Actions;
        }
        private object get_69_EventTriggerBehaviorBase_EventName(object instance)
        {
            var that = (global::Template10.Behaviors.EventTriggerBehaviorBase)instance;
            return that.EventName;
        }
        private void set_69_EventTriggerBehaviorBase_EventName(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.EventTriggerBehaviorBase)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_70_EventTriggerBehaviorBase_SourceObject(object instance)
        {
            var that = (global::Template10.Behaviors.EventTriggerBehaviorBase)instance;
            return that.SourceObject;
        }
        private void set_70_EventTriggerBehaviorBase_SourceObject(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.EventTriggerBehaviorBase)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_71_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_72_ShowDialogAction_Dialog(object instance)
        {
            var that = (global::HealthCare.Win.Controls.ShowDialogAction)instance;
            return that.Dialog;
        }
        private void set_72_ShowDialogAction_Dialog(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.ShowDialogAction)instance;
            that.Dialog = (global::Windows.UI.Xaml.Controls.ContentDialog)Value;
        }
        private object get_73_ChbaseView_RootWebView(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.ChbaseView)instance;
            return that.RootWebView;
        }
        private object get_74_DataRequestBehavior_ItemsSource(object instance)
        {
            var that = (global::HealthCare.Win.Controls.DataRequestBehavior)instance;
            return that.ItemsSource;
        }
        private void set_74_DataRequestBehavior_ItemsSource(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Controls.DataRequestBehavior)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_75_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior<global::Windows.UI.Xaml.Controls.ListViewBase>)instance;
            return that.AssociatedObject;
        }
        private object get_76_CheckupsView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.CheckupsView)instance;
            return that.ViewModel;
        }
        private void set_76_CheckupsView_ViewModel(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.CheckupsView)instance;
            that.ViewModel = (global::HealthCare.Core.ViewModels.HomeViewModel)Value;
        }
        private object get_77_CmeLibraryView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.CmeLibraryView)instance;
            return that.ViewModel;
        }
        private void set_77_CmeLibraryView_ViewModel(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.CmeLibraryView)instance;
            that.ViewModel = (global::HealthCare.Core.ViewModels.HomeViewModel)Value;
        }
        private object get_78_ConsultView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.ConsultView)instance;
            return that.ViewModel;
        }
        private void set_78_ConsultView_ViewModel(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.ConsultView)instance;
            that.ViewModel = (global::HealthCare.Core.ViewModels.HomeViewModel)Value;
        }
        private object get_79_WeekTopicView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.WeekTopicView)instance;
            return that.ViewModel;
        }
        private void set_79_WeekTopicView_ViewModel(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.WeekTopicView)instance;
            that.ViewModel = (global::HealthCare.Core.ViewModels.HomeViewModel)Value;
        }
        private object get_80_ScheduleAddingViewModel_Weeks(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.Weeks;
        }
        private object get_81_ScheduleAddingViewModel_CurrentDate(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.CurrentDate;
        }
        private void set_81_ScheduleAddingViewModel_CurrentDate(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.CurrentDate = (global::System.DateTime)Value;
        }
        private object get_82_ScheduleAddingViewModel_RefreshCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.RefreshCommand;
        }
        private object get_83_ScheduleAddingViewModel_Hospitals(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.Hospitals;
        }
        private object get_84_Hospital_HospitalId(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.HospitalId;
        }
        private void set_84_Hospital_HospitalId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.HospitalId = (global::System.String)Value;
        }
        private object get_85_Hospital_Id(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Id;
        }
        private void set_85_Hospital_Id(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_86_Hospital_ParentId(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.ParentId;
        }
        private void set_86_Hospital_ParentId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.ParentId = (global::System.String)Value;
        }
        private object get_87_Hospital_Code(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Code;
        }
        private void set_87_Hospital_Code(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Code = (global::System.String)Value;
        }
        private object get_88_Hospital_Name(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Name;
        }
        private void set_88_Hospital_Name(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_89_Hospital_Address(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Address;
        }
        private void set_89_Hospital_Address(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Address = (global::System.String)Value;
        }
        private object get_90_Hospital_Location(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Location;
        }
        private void set_90_Hospital_Location(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Location = (global::System.Collections.Generic.List<global::System.Double>)Value;
        }
        private object get_91_Hospital_Phones(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Phones;
        }
        private void set_91_Hospital_Phones(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Phones = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_92_Hospital_Emails(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Emails;
        }
        private void set_92_Hospital_Emails(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Emails = (global::System.Collections.Generic.List<global::System.String>)Value;
        }
        private object get_93_Hospital_SchedulingFee(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.SchedulingFee;
        }
        private void set_93_Hospital_SchedulingFee(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.SchedulingFee = (global::System.Double)Value;
        }
        private object get_94_Hospital_CheckupFee(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.CheckupFee;
        }
        private void set_94_Hospital_CheckupFee(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.CheckupFee = (global::System.Double)Value;
        }
        private object get_95_Hospital_Photos(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Photos;
        }
        private void set_95_Hospital_Photos(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Photos = (global::HealthCare.Core.Models.Photos)Value;
        }
        private object get_96_Hospital_CheckupTypeIds(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.CheckupTypeIds;
        }
        private void set_96_Hospital_CheckupTypeIds(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.CheckupTypeIds = (global::System.Object)Value;
        }
        private object get_97_Hospital_ScbMid(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.ScbMid;
        }
        private void set_97_Hospital_ScbMid(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.ScbMid = (global::System.Object)Value;
        }
        private object get_98_Hospital_ScbTid(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.ScbTid;
        }
        private void set_98_Hospital_ScbTid(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.ScbTid = (global::System.Object)Value;
        }
        private object get_99_Hospital_Status(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Status;
        }
        private void set_99_Hospital_Status(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Status = (global::System.Object)Value;
        }
        private object get_100_Hospital_CityId(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.CityId;
        }
        private void set_100_Hospital_CityId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.CityId = (global::System.String)Value;
        }
        private object get_101_Hospital_DistrictId(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.DistrictId;
        }
        private void set_101_Hospital_DistrictId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.DistrictId = (global::System.String)Value;
        }
        private object get_102_Hospital_IsFamousHospital(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.IsFamousHospital;
        }
        private void set_102_Hospital_IsFamousHospital(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.IsFamousHospital = (global::System.Boolean)Value;
        }
        private object get_103_Hospital_IsCLASHospital(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.IsCLASHospital;
        }
        private void set_103_Hospital_IsCLASHospital(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.IsCLASHospital = (global::System.Boolean)Value;
        }
        private object get_104_Hospital_AdminUsers(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.AdminUsers;
        }
        private void set_104_Hospital_AdminUsers(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.AdminUsers = (global::System.Object)Value;
        }
        private object get_105_Hospital_ClassharePercent(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.ClassharePercent;
        }
        private void set_105_Hospital_ClassharePercent(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.ClassharePercent = (global::System.Int32)Value;
        }
        private object get_106_Hospital_Roles(object instance)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            return that.Roles;
        }
        private void set_106_Hospital_Roles(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Hospital)instance;
            that.Roles = (global::System.Collections.Generic.List<global::System.Int32>)Value;
        }
        private object get_107_ScheduleAddingViewModel_Hospital(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.Hospital;
        }
        private void set_107_ScheduleAddingViewModel_Hospital(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.Hospital = (global::HealthCare.Core.Models.Hospital)Value;
        }
        private object get_108_ScheduleAddingViewModel_StartTime(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.StartTime;
        }
        private void set_108_ScheduleAddingViewModel_StartTime(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.StartTime = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_109_ScheduleAddingViewModel_DaySource(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.DaySource;
        }
        private void set_109_ScheduleAddingViewModel_DaySource(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.DaySource = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>)Value;
        }
        private object get_110_DoctorDayOfWeekObject_Value(object instance)
        {
            var that = (global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject)instance;
            return that.Value;
        }
        private void set_110_DoctorDayOfWeekObject_Value(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Enums.DoctorDayOfWeekObject)instance;
            that.Value = (global::HealthCare.Core.Models.Enums.DoctorDayOfWeek)Value;
        }
        private object get_111_ScheduleAddingViewModel_EndTime(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.EndTime;
        }
        private void set_111_ScheduleAddingViewModel_EndTime(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.EndTime = (global::System.Nullable<global::System.DateTime>)Value;
        }
        private object get_112_ScheduleAddingViewModel_SaveCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.SaveCommand;
        }
        private object get_113_ScheduleAddingViewModel_Quality(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.Quality;
        }
        private void set_113_ScheduleAddingViewModel_Quality(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.Quality = (global::System.Int32)Value;
        }
        private object get_114_ScheduleAddingViewModel_DayOfWeeks(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.DayOfWeeks;
        }
        private void set_114_ScheduleAddingViewModel_DayOfWeeks(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.DayOfWeeks = (global::HealthCare.Core.Models.Enums.DoctorDayOfWeek[])Value;
        }
        private object get_115_ScheduleAddingViewModel_BoolDoctorDayofWeeks(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.BoolDoctorDayofWeeks;
        }
        private void set_115_ScheduleAddingViewModel_BoolDoctorDayofWeeks(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.BoolDoctorDayofWeeks = (global::System.Collections.Generic.List<global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek>)Value;
        }
        private object get_116_BoolDoctorDayofWeek_isSelected(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek)instance;
            return that.isSelected;
        }
        private void set_116_BoolDoctorDayofWeek_isSelected(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek)instance;
            that.isSelected = (global::System.Boolean)Value;
        }
        private object get_117_BoolDoctorDayofWeek_DoctorDayOfWeek(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek)instance;
            return that.DoctorDayOfWeek;
        }
        private void set_117_BoolDoctorDayofWeek_DoctorDayOfWeek(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek)instance;
            that.DoctorDayOfWeek = (global::HealthCare.Core.Models.Enums.DoctorDayOfWeek)Value;
        }
        private object get_118_BoolDoctorDayofWeek_SelectDayString(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.BoolDoctorDayofWeek)instance;
            return that.SelectDayString;
        }
        private object get_119_ScheduleAddingViewModel_ListBoolDoctorDayofWeek(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.ListBoolDoctorDayofWeek;
        }
        private void set_119_ScheduleAddingViewModel_ListBoolDoctorDayofWeek(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.ListBoolDoctorDayofWeek = (global::HealthCare.Core.ViewModels.ListBoolDoctorDayofWeek)Value;
        }
        private object get_120_ScheduleAddingViewModel_EndDate(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.EndDate;
        }
        private void set_120_ScheduleAddingViewModel_EndDate(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.EndDate = (global::System.DateTime)Value;
        }
        private object get_121_ScheduleAddingViewModel_WeekCount(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            return that.WeekCount;
        }
        private void set_121_ScheduleAddingViewModel_WeekCount(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ScheduleAddingViewModel)instance;
            that.WeekCount = (global::System.Int32)Value;
        }
        private object get_122_SetPasswordViewModel_OldPassword(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            return that.OldPassword;
        }
        private void set_122_SetPasswordViewModel_OldPassword(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            that.OldPassword = (global::System.String)Value;
        }
        private object get_123_SetPasswordViewModel_NewPassword(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            return that.NewPassword;
        }
        private void set_123_SetPasswordViewModel_NewPassword(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            that.NewPassword = (global::System.String)Value;
        }
        private object get_124_SetPasswordViewModel_ConfirmPassword(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            return that.ConfirmPassword;
        }
        private void set_124_SetPasswordViewModel_ConfirmPassword(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            that.ConfirmPassword = (global::System.String)Value;
        }
        private object get_125_SetPasswordViewModel_SetPasswordCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SetPasswordViewModel)instance;
            return that.SetPasswordCommand;
        }
        private object get_126_DataTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_127_DataTriggerBehavior_Binding(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Binding;
        }
        private void set_127_DataTriggerBehavior_Binding(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Binding = (global::System.Object)Value;
        }
        private object get_128_DataTriggerBehavior_Value(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Value;
        }
        private void set_128_DataTriggerBehavior_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_129_DataTriggerBehavior_ComparisonCondition(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.ComparisonCondition;
        }
        private void set_129_DataTriggerBehavior_ComparisonCondition(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.ComparisonCondition = (global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType)Value;
        }
        private object get_130_ConditionalAction_Actions(object instance)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            return that.Actions;
        }
        private object get_131_ConditionalAction_LeftValue(object instance)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            return that.LeftValue;
        }
        private void set_131_ConditionalAction_LeftValue(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            that.LeftValue = (global::System.Object)Value;
        }
        private object get_132_ConditionalAction_Operator(object instance)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            return that.Operator;
        }
        private void set_132_ConditionalAction_Operator(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            that.Operator = (global::Template10.Behaviors.ConditionalAction.Operators)Value;
        }
        private object get_133_ConditionalAction_RightValue(object instance)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            return that.RightValue;
        }
        private void set_133_ConditionalAction_RightValue(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.ConditionalAction)instance;
            that.RightValue = (global::System.Object)Value;
        }
        private object get_134_ChangePropertyAction_PropertyName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction)instance;
            return that.PropertyName;
        }
        private void set_134_ChangePropertyAction_PropertyName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction)instance;
            that.PropertyName = (global::Windows.UI.Xaml.PropertyPath)Value;
        }
        private object get_135_ChangePropertyAction_TargetObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction)instance;
            return that.TargetObject;
        }
        private void set_135_ChangePropertyAction_TargetObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction)instance;
            that.TargetObject = (global::System.Object)Value;
        }
        private object get_136_ChangePropertyAction_Value(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction)instance;
            return that.Value;
        }
        private void set_136_ChangePropertyAction_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.ChangePropertyAction)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_137_HamburgerButtonInfo_Content(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.Content;
        }
        private void set_137_HamburgerButtonInfo_Content(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.Content = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_138_HamburgerButtonInfo_ButtonType(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.ButtonType;
        }
        private void set_138_HamburgerButtonInfo_ButtonType(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.ButtonType = (global::Template10.Controls.HamburgerButtonInfo.ButtonTypes)Value;
        }
        private object get_139_HamburgerButtonInfo_NavigationTransitionInfo(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.NavigationTransitionInfo;
        }
        private void set_139_HamburgerButtonInfo_NavigationTransitionInfo(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.NavigationTransitionInfo = (global::Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo)Value;
        }
        private object get_140_HamburgerButtonInfo_PageType(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.PageType;
        }
        private void set_140_HamburgerButtonInfo_PageType(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.PageType = (global::System.Type)Value;
        }
        private object get_141_HamburgerButtonInfo_PageParameter(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.PageParameter;
        }
        private void set_141_HamburgerButtonInfo_PageParameter(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.PageParameter = (global::System.Object)Value;
        }
        private object get_142_HamburgerButtonInfo_ClearHistory(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.ClearHistory;
        }
        private void set_142_HamburgerButtonInfo_ClearHistory(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.ClearHistory = (global::System.Boolean)Value;
        }
        private object get_143_HamburgerButtonInfo_Visibility(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.Visibility;
        }
        private void set_143_HamburgerButtonInfo_Visibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.Visibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_144_HamburgerButtonInfo_IsEnabled(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.IsEnabled;
        }
        private void set_144_HamburgerButtonInfo_IsEnabled(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_145_HamburgerButtonInfo_IsChecked(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.IsChecked;
        }
        private void set_145_HamburgerButtonInfo_IsChecked(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.IsChecked = (global::System.Nullable<global::System.Boolean>)Value;
        }
        private object get_146_HamburgerButtonInfo_MaxWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            return that.MaxWidth;
        }
        private void set_146_HamburgerButtonInfo_MaxWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerButtonInfo)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_147_HamburgerMenu_PrimaryButtons(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PrimaryButtons;
        }
        private void set_147_HamburgerMenu_PrimaryButtons(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PrimaryButtons = (global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>)Value;
        }
        private object get_148_HamburgerMenu_NavAreaBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavAreaBackground;
        }
        private void set_148_HamburgerMenu_NavAreaBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavAreaBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_149_HamburgerMenu_NavButtonForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonForeground;
        }
        private void set_149_HamburgerMenu_NavButtonForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_150_HamburgerMenu_NavButtonCheckedBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonCheckedBackground;
        }
        private void set_150_HamburgerMenu_NavButtonCheckedBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonCheckedBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_151_HamburgerMenu_NavButtonBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonBackground;
        }
        private void set_151_HamburgerMenu_NavButtonBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_152_HamburgerMenu_NavButtonHoverBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonHoverBackground;
        }
        private void set_152_HamburgerMenu_NavButtonHoverBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonHoverBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_153_HamburgerMenu_NavButtonPressedBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonPressedBackground;
        }
        private void set_153_HamburgerMenu_NavButtonPressedBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonPressedBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_154_HamburgerMenu_HamburgerBackground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerBackground;
        }
        private void set_154_HamburgerMenu_HamburgerBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerBackground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_155_HamburgerMenu_HamburgerForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerForeground;
        }
        private void set_155_HamburgerMenu_HamburgerForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_156_HamburgerMenu_DisplayMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.DisplayMode;
        }
        private void set_156_HamburgerMenu_DisplayMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.DisplayMode = (global::Windows.UI.Xaml.Controls.SplitViewDisplayMode)Value;
        }
        private object get_157_HamburgerMenu_NavCommand(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavCommand;
        }
        private object get_158_HamburgerMenu_VisualStateNarrowMinWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateNarrowMinWidth;
        }
        private void set_158_HamburgerMenu_VisualStateNarrowMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateNarrowMinWidth = (global::System.Double)Value;
        }
        private object get_159_HamburgerMenu_VisualStateNormalMinWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateNormalMinWidth;
        }
        private void set_159_HamburgerMenu_VisualStateNormalMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateNormalMinWidth = (global::System.Double)Value;
        }
        private object get_160_HamburgerMenu_VisualStateWideMinWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.VisualStateWideMinWidth;
        }
        private void set_160_HamburgerMenu_VisualStateWideMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.VisualStateWideMinWidth = (global::System.Double)Value;
        }
        private object get_161_HamburgerMenu_SecondaryButtonOrientation(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.SecondaryButtonOrientation;
        }
        private void set_161_HamburgerMenu_SecondaryButtonOrientation(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.SecondaryButtonOrientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_162_HamburgerMenu_AccentColor(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.AccentColor;
        }
        private void set_162_HamburgerMenu_AccentColor(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.AccentColor = (global::Windows.UI.Color)Value;
        }
        private object get_163_HamburgerMenu_HamburgerButtonVisibility(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerButtonVisibility;
        }
        private void set_163_HamburgerMenu_HamburgerButtonVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_164_HamburgerMenu_SecondarySeparator(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.SecondarySeparator;
        }
        private void set_164_HamburgerMenu_SecondarySeparator(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.SecondarySeparator = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_165_HamburgerMenu_PaneBorderBrush(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PaneBorderBrush;
        }
        private void set_165_HamburgerMenu_PaneBorderBrush(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PaneBorderBrush = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_166_HamburgerMenu_NavButtonCheckedForeground(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavButtonCheckedForeground;
        }
        private void set_166_HamburgerMenu_NavButtonCheckedForeground(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavButtonCheckedForeground = (global::Windows.UI.Xaml.Media.SolidColorBrush)Value;
        }
        private object get_167_HamburgerMenu_Selected(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.Selected;
        }
        private void set_167_HamburgerMenu_Selected(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.Selected = (global::Template10.Controls.HamburgerButtonInfo)Value;
        }
        private object get_168_HamburgerMenu_IsOpen(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.IsOpen;
        }
        private void set_168_HamburgerMenu_IsOpen(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_169_HamburgerMenu_NavigationService(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.NavigationService;
        }
        private void set_169_HamburgerMenu_NavigationService(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.NavigationService = (global::Template10.Services.NavigationService.INavigationService)Value;
        }
        private object get_170_HamburgerMenu_IsFullScreen(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.IsFullScreen;
        }
        private void set_170_HamburgerMenu_IsFullScreen(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.IsFullScreen = (global::System.Boolean)Value;
        }
        private object get_171_HamburgerMenu_SecondaryButtons(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.SecondaryButtons;
        }
        private void set_171_HamburgerMenu_SecondaryButtons(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.SecondaryButtons = (global::System.Collections.ObjectModel.ObservableCollection<global::Template10.Controls.HamburgerButtonInfo>)Value;
        }
        private object get_172_HamburgerMenu_PaneWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PaneWidth;
        }
        private void set_172_HamburgerMenu_PaneWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PaneWidth = (global::System.Double)Value;
        }
        private object get_173_HamburgerMenu_PaneBorderThickness(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.PaneBorderThickness;
        }
        private void set_173_HamburgerMenu_PaneBorderThickness(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.PaneBorderThickness = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_174_HamburgerMenu_HeaderContent(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HeaderContent;
        }
        private void set_174_HamburgerMenu_HeaderContent(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HeaderContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_175_HamburgerMenu_HamburgerButtonGridWidth(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.HamburgerButtonGridWidth;
        }
        private void set_175_HamburgerMenu_HamburgerButtonGridWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.HamburgerButtonGridWidth = (global::System.Double)Value;
        }
        private object get_176_HamburgerMenu_OpenCloseMode(object instance)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            return that.OpenCloseMode;
        }
        private void set_176_HamburgerMenu_OpenCloseMode(object instance, object Value)
        {
            var that = (global::Template10.Controls.HamburgerMenu)instance;
            that.OpenCloseMode = (global::Template10.Controls.HamburgerMenu.OpenCloseModes)Value;
        }
        private object get_177_ModalDialog_ModalBackground(object instance)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            return that.ModalBackground;
        }
        private void set_177_ModalDialog_ModalBackground(object instance, object Value)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            that.ModalBackground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_178_ModalDialog_IsModal(object instance)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            return that.IsModal;
        }
        private void set_178_ModalDialog_IsModal(object instance, object Value)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            that.IsModal = (global::System.Boolean)Value;
        }
        private object get_179_ModalDialog_CanBackButtonDismiss(object instance)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            return that.CanBackButtonDismiss;
        }
        private void set_179_ModalDialog_CanBackButtonDismiss(object instance, object Value)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            that.CanBackButtonDismiss = (global::System.Boolean)Value;
        }
        private object get_180_ModalDialog_DisableBackButtonWhenModal(object instance)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            return that.DisableBackButtonWhenModal;
        }
        private void set_180_ModalDialog_DisableBackButtonWhenModal(object instance, object Value)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            that.DisableBackButtonWhenModal = (global::System.Boolean)Value;
        }
        private object get_181_ModalDialog_ModalContent(object instance)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            return that.ModalContent;
        }
        private void set_181_ModalDialog_ModalContent(object instance, object Value)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            that.ModalContent = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_182_ModalDialog_ModalTransitions(object instance)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            return that.ModalTransitions;
        }
        private void set_182_ModalDialog_ModalTransitions(object instance, object Value)
        {
            var that = (global::Template10.Controls.ModalDialog)instance;
            that.ModalTransitions = (global::Windows.UI.Xaml.Media.Animation.TransitionCollection)Value;
        }
        private object get_183_PageHeader_BackButtonVisibility(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.BackButtonVisibility;
        }
        private void set_183_PageHeader_BackButtonVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.BackButtonVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_184_PageHeader_BackButtonContent(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.BackButtonContent;
        }
        private void set_184_PageHeader_BackButtonContent(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.BackButtonContent = (global::Windows.UI.Xaml.Controls.Symbol)Value;
        }
        private object get_185_PageHeader_Frame(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.Frame;
        }
        private void set_185_PageHeader_Frame(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.Frame = (global::Windows.UI.Xaml.Controls.Frame)Value;
        }
        private object get_186_PageHeader_VisualStateNarrowMinWidth(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.VisualStateNarrowMinWidth;
        }
        private void set_186_PageHeader_VisualStateNarrowMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.VisualStateNarrowMinWidth = (global::System.Double)Value;
        }
        private object get_187_PageHeader_VisualStateNormalMinWidth(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.VisualStateNormalMinWidth;
        }
        private void set_187_PageHeader_VisualStateNormalMinWidth(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.VisualStateNormalMinWidth = (global::System.Double)Value;
        }
        private object get_188_PageHeader_Text(object instance)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            return that.Text;
        }
        private void set_188_PageHeader_Text(object instance, object Value)
        {
            var that = (global::Template10.Controls.PageHeader)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_189_NavButtonBehavior_Direction(object instance)
        {
            var that = (global::Template10.Behaviors.NavButtonBehavior)instance;
            return that.Direction;
        }
        private void set_189_NavButtonBehavior_Direction(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.NavButtonBehavior)instance;
            that.Direction = (global::Template10.Behaviors.NavButtonBehavior.Directions)Value;
        }
        private object get_190_NavButtonBehavior_Frame(object instance)
        {
            var that = (global::Template10.Behaviors.NavButtonBehavior)instance;
            return that.Frame;
        }
        private void set_190_NavButtonBehavior_Frame(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.NavButtonBehavior)instance;
            that.Frame = (global::Windows.UI.Xaml.Controls.Frame)Value;
        }
        private object get_191_NavButtonBehavior_AssociatedObject(object instance)
        {
            var that = (global::Template10.Behaviors.NavButtonBehavior)instance;
            return that.AssociatedObject;
        }
        private void set_191_NavButtonBehavior_AssociatedObject(object instance, object Value)
        {
            var that = (global::Template10.Behaviors.NavButtonBehavior)instance;
            that.AssociatedObject = (global::Windows.UI.Xaml.DependencyObject)Value;
        }
        private object get_192_Resizer_ElementControl(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.ElementControl;
        }
        private void set_192_Resizer_ElementControl(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.ElementControl = (global::Windows.UI.Xaml.Controls.Control)Value;
        }
        private object get_193_Resizer_GrabberBrush(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.GrabberBrush;
        }
        private void set_193_Resizer_GrabberBrush(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.GrabberBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_194_Resizer_GrabberVisibility(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.GrabberVisibility;
        }
        private void set_194_Resizer_GrabberVisibility(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.GrabberVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_195_Resizer_GrabberSize(object instance)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            return that.GrabberSize;
        }
        private void set_195_Resizer_GrabberSize(object instance, object Value)
        {
            var that = (global::Template10.Controls.Resizer)instance;
            that.GrabberSize = (global::Windows.Foundation.Size)Value;
        }
        private object get_196_SettingView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.SettingView)instance;
            return that.ViewModel;
        }
        private void set_196_SettingView_ViewModel(object instance, object Value)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.SettingView)instance;
            that.ViewModel = (global::HealthCare.Core.ViewModels.HomeViewModel)Value;
        }
        private object get_197_LoginViewModel_UserName(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.UserName;
        }
        private void set_197_LoginViewModel_UserName(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            that.UserName = (global::System.String)Value;
        }
        private object get_198_LoginViewModel_Password(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.Password;
        }
        private void set_198_LoginViewModel_Password(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            that.Password = (global::System.String)Value;
        }
        private object get_199_LoginViewModel_Remember(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.Remember;
        }
        private void set_199_LoginViewModel_Remember(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            that.Remember = (global::System.Boolean)Value;
        }
        private object get_200_LoginViewModel_LoginCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.LoginCommand;
        }
        private object get_201_LoginViewModel_SignUpCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.SignUpCommand;
        }
        private object get_202_LoginViewModel_ResetCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.ResetCommand;
        }
        private object get_203_LoginViewModel_Loading(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            return that.Loading;
        }
        private void set_203_LoginViewModel_Loading(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.LoginViewModel)instance;
            that.Loading = (global::System.Boolean)Value;
        }
        private object get_204_LoginView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.LoginView)instance;
            return that.ViewModel;
        }
        private object get_205_ResetPassViewModel_Email(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ResetPassViewModel)instance;
            return that.Email;
        }
        private void set_205_ResetPassViewModel_Email(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ResetPassViewModel)instance;
            that.Email = (global::System.String)Value;
        }
        private object get_206_ResetPassViewModel_ResetPassCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ResetPassViewModel)instance;
            return that.ResetPassCommand;
        }
        private void set_206_ResetPassViewModel_ResetPassCommand(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ResetPassViewModel)instance;
            that.ResetPassCommand = (global::Template10.Mvvm.MvxCommand)Value;
        }
        private object get_207_ResetPassViewModel_BackCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.ResetPassViewModel)instance;
            return that.BackCommand;
        }
        private void set_207_ResetPassViewModel_BackCommand(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.ResetPassViewModel)instance;
            that.BackCommand = (global::Template10.Mvvm.MvxCommand)Value;
        }
        private object get_208_ScheduleView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.HomeTab.ScheduleView)instance;
            return that.ViewModel;
        }
        private object get_209_SignUpViewModel_Loading(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.Loading;
        }
        private void set_209_SignUpViewModel_Loading(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            that.Loading = (global::System.Boolean)Value;
        }
        private object get_210_SignUpViewModel_Account(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.Account;
        }
        private void set_210_SignUpViewModel_Account(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            that.Account = (global::HealthCare.Core.Models.SignUpInfo)Value;
        }
        private object get_211_SignUpViewModel_Cities(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.Cities;
        }
        private void set_211_SignUpViewModel_Cities(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            that.Cities = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.City>)Value;
        }
        private object get_212_City_Id(object instance)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            return that.Id;
        }
        private void set_212_City_Id(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_213_City_Name(object instance)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            return that.Name;
        }
        private void set_213_City_Name(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_214_City_IsUsedForDoctorSearch(object instance)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            return that.IsUsedForDoctorSearch;
        }
        private void set_214_City_IsUsedForDoctorSearch(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            that.IsUsedForDoctorSearch = (global::System.Boolean)Value;
        }
        private object get_215_City_Districts(object instance)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            return that.Districts;
        }
        private void set_215_City_Districts(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            that.Districts = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.District>)Value;
        }
        private object get_216_District_Id(object instance)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            return that.Id;
        }
        private void set_216_District_Id(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_217_District_CityId(object instance)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            return that.CityId;
        }
        private void set_217_District_CityId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            that.CityId = (global::System.String)Value;
        }
        private object get_218_District_Name(object instance)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            return that.Name;
        }
        private void set_218_District_Name(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_219_District_Location(object instance)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            return that.Location;
        }
        private void set_219_District_Location(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            that.Location = (global::System.Collections.Generic.List<global::System.Double>)Value;
        }
        private object get_220_District_City(object instance)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            return that.City;
        }
        private void set_220_District_City(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.District)instance;
            that.City = (global::HealthCare.Core.Models.City)Value;
        }
        private object get_221_City_DistrictNames(object instance)
        {
            var that = (global::HealthCare.Core.Models.City)instance;
            return that.DistrictNames;
        }
        private object get_222_SignUpViewModel_CheckupTypes(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.CheckupTypes;
        }
        private void set_222_SignUpViewModel_CheckupTypes(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            that.CheckupTypes = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.CheckupType>)Value;
        }
        private object get_223_CheckupType_Id(object instance)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            return that.Id;
        }
        private void set_223_CheckupType_Id(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            that.Id = (global::System.String)Value;
        }
        private object get_224_CheckupType_Name(object instance)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            return that.Name;
        }
        private void set_224_CheckupType_Name(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            that.Name = (global::HealthCare.Core.Models.NameMap)Value;
        }
        private object get_225_CheckupType_HospitalId(object instance)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            return that.HospitalId;
        }
        private void set_225_CheckupType_HospitalId(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            that.HospitalId = (global::System.Object)Value;
        }
        private object get_226_CheckupType_Status(object instance)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            return that.Status;
        }
        private void set_226_CheckupType_Status(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.CheckupType)instance;
            that.Status = (global::System.Boolean)Value;
        }
        private object get_227_SignUpViewModel_SignUpCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.SignUpCommand;
        }
        private void set_227_SignUpViewModel_SignUpCommand(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            that.SignUpCommand = (global::Template10.Mvvm.MvxCommand)Value;
        }
        private object get_228_SignUpViewModel_BackCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.BackCommand;
        }
        private object get_229_SignUpViewModel_Districts(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.Districts;
        }
        private void set_229_SignUpViewModel_Districts(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            that.Districts = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.District>)Value;
        }
        private object get_230_SignUpViewModel_Genders(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.SignUpViewModel)instance;
            return that.Genders;
        }
        private object get_231_Gender_IsFemale(object instance)
        {
            var that = (global::HealthCare.Core.Models.Gender)instance;
            return that.IsFemale;
        }
        private void set_231_Gender_IsFemale(object instance, object Value)
        {
            var that = (global::HealthCare.Core.Models.Gender)instance;
            that.IsFemale = (global::System.Boolean)Value;
        }
        private object get_232_Gender_Value(object instance)
        {
            var that = (global::HealthCare.Core.Models.Gender)instance;
            return that.Value;
        }
        private object get_233_UpdateProfileViewModel_GenderCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.GenderCommand;
        }
        private object get_234_UpdateProfileViewModel_SaveCommand(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.SaveCommand;
        }
        private object get_235_UpdateProfileViewModel_Loading(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.Loading;
        }
        private void set_235_UpdateProfileViewModel_Loading(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            that.Loading = (global::System.Boolean)Value;
        }
        private object get_236_UpdateProfileViewModel_Genders(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.Genders;
        }
        private object get_237_UpdateProfileViewModel_Account(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.Account;
        }
        private void set_237_UpdateProfileViewModel_Account(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            that.Account = (global::HealthCare.Core.Models.Doctor)Value;
        }
        private object get_238_UpdateProfileViewModel_Cities(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.Cities;
        }
        private void set_238_UpdateProfileViewModel_Cities(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            that.Cities = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.City>)Value;
        }
        private object get_239_UpdateProfileViewModel_Districts(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.Districts;
        }
        private void set_239_UpdateProfileViewModel_Districts(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            that.Districts = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.District>)Value;
        }
        private object get_240_UpdateProfileViewModel_CheckupTypes(object instance)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            return that.CheckupTypes;
        }
        private void set_240_UpdateProfileViewModel_CheckupTypes(object instance, object Value)
        {
            var that = (global::HealthCare.Core.ViewModels.UpdateProfileViewModel)instance;
            that.CheckupTypes = (global::System.Collections.Generic.List<global::HealthCare.Core.Models.CheckupType>)Value;
        }
        private object get_241_UpdateProfileView_ViewModel(object instance)
        {
            var that = (global::HealthCare.Win.Views.UpdateProfileView)instance;
            return that.ViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember xamlMember = null;
            global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Template10.Common.BootStrapper.SessionState":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SessionState", "Template10.Common.StateItems");
                xamlMember.Getter = get_0_BootStrapper_SessionState;
                xamlMember.Setter = set_0_BootStrapper_SessionState;
                break;
            case "Template10.Common.BootStrapper.NavigationService":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_1_BootStrapper_NavigationService;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.SplashFactory":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SplashFactory", "System.Func`2<Windows.ApplicationModel.Activation.SplashScreen, Windows.UI.Xaml.Controls.UserControl>");
                xamlMember.Getter = get_2_BootStrapper_SplashFactory;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.CacheMaxDuration":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CacheMaxDuration", "TimeSpan");
                xamlMember.Getter = get_3_BootStrapper_CacheMaxDuration;
                xamlMember.Setter = set_3_BootStrapper_CacheMaxDuration;
                break;
            case "Template10.Common.BootStrapper.ShowShellBackButton":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ShowShellBackButton", "Boolean");
                xamlMember.Getter = get_4_BootStrapper_ShowShellBackButton;
                xamlMember.Setter = set_4_BootStrapper_ShowShellBackButton;
                break;
            case "Template10.Common.BootStrapper.ForceShowShellBackButton":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ForceShowShellBackButton", "Boolean");
                xamlMember.Getter = get_5_BootStrapper_ForceShowShellBackButton;
                xamlMember.Setter = set_5_BootStrapper_ForceShowShellBackButton;
                break;
            case "Template10.Common.BootStrapper.OriginalActivatedArgs":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "OriginalActivatedArgs", "Windows.ApplicationModel.Activation.IActivatedEventArgs");
                xamlMember.Getter = get_6_BootStrapper_OriginalActivatedArgs;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.ModalDialog":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ModalDialog", "Template10.Controls.ModalDialog");
                xamlMember.Getter = get_7_BootStrapper_ModalDialog;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Common.BootStrapper.ModalContent":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Common.BootStrapper");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ModalContent", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_8_BootStrapper_ModalContent;
                xamlMember.Setter = set_8_BootStrapper_ModalContent;
                break;
            case "HealthCare.Win.RootCommand.CallCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.RootCommand");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CallCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_9_RootCommand_CallCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Windows.UI.Color.A":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_10_Color_A;
                xamlMember.Setter = set_10_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_11_Color_B;
                xamlMember.Setter = set_11_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_12_Color_G;
                xamlMember.Setter = set_12_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_13_Color_R;
                xamlMember.Setter = set_13_Color_R;
                break;
            case "HealthCare.Core.Resources.LocalizedStrings.LocalizedResources":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Resources.LocalizedStrings");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "LocalizedResources", "HealthCare.Core.Resources.AppResources");
                xamlMember.Getter = get_14_LocalizedStrings_LocalizedResources;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Win.Controls.NumberPicker.Value":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.NumberPicker");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Value", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_NumberPicker_Value;
                xamlMember.Setter = set_15_NumberPicker_Value;
                break;
            case "HealthCare.Win.Controls.NumberPicker.MinValue":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.NumberPicker");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "MinValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_NumberPicker_MinValue;
                xamlMember.Setter = set_16_NumberPicker_MinValue;
                break;
            case "HealthCare.Win.Controls.NumberPicker.MaxValue":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.NumberPicker");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "MaxValue", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_NumberPicker_MaxValue;
                xamlMember.Setter = set_17_NumberPicker_MaxValue;
                break;
            case "HealthCare.Win.Controls.TabHeader.Glyph":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.TabHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_TabHeader_Glyph;
                xamlMember.Setter = set_18_TabHeader_Glyph;
                break;
            case "HealthCare.Win.Controls.TabHeader.Label":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.TabHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_TabHeader_Label;
                xamlMember.Setter = set_19_TabHeader_Label;
                break;
            case "HealthCare.Core.ViewModels.CheckupViewModel.Checkup":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CheckupViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Checkup", "HealthCare.Core.Models.Checkup");
                xamlMember.Getter = get_20_CheckupViewModel_Checkup;
                xamlMember.Setter = set_20_CheckupViewModel_Checkup;
                break;
            case "Template10.Mvvm.ViewModelBase.NavigationService":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_21_ViewModelBase_NavigationService;
                xamlMember.Setter = set_21_ViewModelBase_NavigationService;
                break;
            case "Template10.Mvvm.ViewModelBase.Dispatcher":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Dispatcher", "Template10.Common.IDispatcherWrapper");
                xamlMember.Getter = get_22_ViewModelBase_Dispatcher;
                xamlMember.Setter = set_22_ViewModelBase_Dispatcher;
                break;
            case "Template10.Mvvm.ViewModelBase.SessionState":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Mvvm.ViewModelBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SessionState", "Template10.Common.IStateItems");
                xamlMember.Getter = get_23_ViewModelBase_SessionState;
                xamlMember.Setter = set_23_ViewModelBase_SessionState;
                break;
            case "HealthCare.Core.ViewModels.CmeSearchViewModel.SearchTerm":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeSearchViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SearchTerm", "String");
                xamlMember.Getter = get_24_CmeSearchViewModel_SearchTerm;
                xamlMember.Setter = set_24_CmeSearchViewModel_SearchTerm;
                break;
            case "HealthCare.Core.ViewModels.CmeSearchViewModel.CmeClasses":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeSearchViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CmeClasses", "System.Collections.Generic.List`1<HealthCare.Core.Models.CmeClass>");
                xamlMember.Getter = get_25_CmeSearchViewModel_CmeClasses;
                xamlMember.Setter = set_25_CmeSearchViewModel_CmeClasses;
                break;
            case "HealthCare.Core.Models.CmeClass.class_name":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CmeClass");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "class_name", "String");
                xamlMember.Getter = get_26_CmeClass_class_name;
                xamlMember.Setter = set_26_CmeClass_class_name;
                break;
            case "HealthCare.Core.Models.CmeClass.current_url":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CmeClass");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "current_url", "String");
                xamlMember.Getter = get_27_CmeClass_current_url;
                xamlMember.Setter = set_27_CmeClass_current_url;
                break;
            case "HealthCare.Core.Models.CmeClass.id":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CmeClass");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "id", "String");
                xamlMember.Getter = get_28_CmeClass_id;
                xamlMember.Setter = set_28_CmeClass_id;
                break;
            case "HealthCare.Core.Models.CmeClass.short_description":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CmeClass");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "short_description", "String");
                xamlMember.Getter = get_29_CmeClass_short_description;
                xamlMember.Setter = set_29_CmeClass_short_description;
                break;
            case "HealthCare.Core.Models.CmeClass.topic_name":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CmeClass");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "topic_name", "String");
                xamlMember.Getter = get_30_CmeClass_topic_name;
                xamlMember.Setter = set_30_CmeClass_topic_name;
                break;
            case "HealthCare.Core.Models.CmeClass.full_description":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CmeClass");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "full_description", "String");
                xamlMember.Getter = get_31_CmeClass_full_description;
                xamlMember.Setter = set_31_CmeClass_full_description;
                break;
            case "HealthCare.Core.ViewModels.CmeSearchViewModel.SearchCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeSearchViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SearchCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_32_CmeSearchViewModel_SearchCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.CmeSearchViewModel.CmeClassCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeSearchViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CmeClassCommand", "Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.CmeClass>");
                xamlMember.Getter = get_33_CmeSearchViewModel_CmeClassCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Win.Controls.ListViewBase.Command":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.ListViewBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_34_ListViewBase_Command;
                xamlMember.Setter = set_34_ListViewBase_Command;
                break;
            case "HealthCare.Core.ViewModels.WeekTopicFileViewModel.TopicFiles":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.WeekTopicFileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "TopicFiles", "System.Collections.Generic.List`1<HealthCare.Core.Models.TopicFiles>");
                xamlMember.Getter = get_35_WeekTopicFileViewModel_TopicFiles;
                xamlMember.Setter = set_35_WeekTopicFileViewModel_TopicFiles;
                break;
            case "HealthCare.Core.Models.TopicFiles.FileName":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.TopicFiles");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "FileName", "String");
                xamlMember.Getter = get_36_TopicFiles_FileName;
                xamlMember.Setter = set_36_TopicFiles_FileName;
                break;
            case "HealthCare.Core.Models.TopicFiles.FileUri":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.TopicFiles");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "FileUri", "String");
                xamlMember.Getter = get_37_TopicFiles_FileUri;
                xamlMember.Setter = set_37_TopicFiles_FileUri;
                break;
            case "HealthCare.Core.ViewModels.WeekTopicFileViewModel.TopicFile":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.WeekTopicFileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "TopicFile", "HealthCare.Core.Models.TopicFiles");
                xamlMember.Getter = get_38_WeekTopicFileViewModel_TopicFile;
                xamlMember.Setter = set_38_WeekTopicFileViewModel_TopicFile;
                break;
            case "HealthCare.Core.ViewModels.WeekTopicFileViewModel.Topic":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.WeekTopicFileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Topic", "HealthCare.Core.Models.Topic");
                xamlMember.Getter = get_39_WeekTopicFileViewModel_Topic;
                xamlMember.Setter = set_39_WeekTopicFileViewModel_Topic;
                break;
            case "HealthCare.Core.ViewModels.WeekTopicFileViewModel.SelectedTopic":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.WeekTopicFileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SelectedTopic", "HealthCare.Core.Models.TopicFiles");
                xamlMember.Getter = get_40_WeekTopicFileViewModel_SelectedTopic;
                xamlMember.Setter = set_40_WeekTopicFileViewModel_SelectedTopic;
                break;
            case "HealthCare.Core.ViewModels.WeekTopicFileViewModel.ShowFileTopicCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.WeekTopicFileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ShowFileTopicCommand", "Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.TopicFiles>");
                xamlMember.Getter = get_41_WeekTopicFileViewModel_ShowFileTopicCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.CmeCategoryViewModel.CmeCategory":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeCategoryViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CmeCategory", "HealthCare.Core.Models.CmeCategory");
                xamlMember.Getter = get_42_CmeCategoryViewModel_CmeCategory;
                xamlMember.Setter = set_42_CmeCategoryViewModel_CmeCategory;
                break;
            case "HealthCare.Core.ViewModels.CmeCategoryViewModel.CmeClassCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeCategoryViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CmeClassCommand", "Template10.Mvvm.MvxCommand`1<HealthCare.Core.Models.CmeClass>");
                xamlMember.Getter = get_43_CmeCategoryViewModel_CmeClassCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_44_Interaction_Behaviors;
                xamlMember.Setter = set_44_Interaction_Behaviors;
                break;
            case "HealthCare.Win.Controls.GridAdaptiveBehavior.ItemMaxHeight":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.GridAdaptiveBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ItemMaxHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_GridAdaptiveBehavior_ItemMaxHeight;
                xamlMember.Setter = set_45_GridAdaptiveBehavior_ItemMaxHeight;
                break;
            case "HealthCare.Win.Controls.GridAdaptiveBehavior.ItemMinWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.GridAdaptiveBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ItemMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_GridAdaptiveBehavior_ItemMinWidth;
                xamlMember.Setter = set_46_GridAdaptiveBehavior_ItemMinWidth;
                break;
            case "HealthCare.Win.Controls.GridAdaptiveBehavior.Ratio":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.GridAdaptiveBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Ratio", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_GridAdaptiveBehavior_Ratio;
                xamlMember.Setter = set_47_GridAdaptiveBehavior_Ratio;
                break;
            case "HealthCare.Win.Controls.GridAdaptiveBehavior.ItemMaxWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.GridAdaptiveBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ItemMaxWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_GridAdaptiveBehavior_ItemMaxWidth;
                xamlMember.Setter = set_48_GridAdaptiveBehavior_ItemMaxWidth;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ItemsWrapGrid>.AssociatedObject":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ItemsWrapGrid>");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.Controls.ItemsWrapGrid");
                xamlMember.Getter = get_49_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.CmeClassViewModel.CmeClass":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.CmeClassViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CmeClass", "HealthCare.Core.Models.CmeClass");
                xamlMember.Getter = get_50_CmeClassViewModel_CmeClass;
                xamlMember.Setter = set_50_CmeClassViewModel_CmeClass;
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.InviteCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "InviteCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_51_ConsultViewModel_InviteCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.Request":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Request", "HealthCare.Core.Models.ConsultRequest");
                xamlMember.Getter = get_52_ConsultViewModel_Request;
                xamlMember.Setter = set_52_ConsultViewModel_Request;
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.Responses":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Responses", "System.Collections.ObjectModel.ObservableCollection`1<HealthCare.Core.Models.ConsultResponse>");
                xamlMember.Getter = get_53_ConsultViewModel_Responses;
                xamlMember.Setter = set_53_ConsultViewModel_Responses;
                break;
            case "HealthCare.Core.Models.ConsultResponse.id":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "id", "String");
                xamlMember.Getter = get_54_ConsultResponse_id;
                xamlMember.Setter = set_54_ConsultResponse_id;
                break;
            case "HealthCare.Core.Models.ConsultResponse.supportRequestId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "supportRequestId", "String");
                xamlMember.Getter = get_55_ConsultResponse_supportRequestId;
                xamlMember.Setter = set_55_ConsultResponse_supportRequestId;
                break;
            case "HealthCare.Core.Models.ConsultResponse.comment":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "comment", "String");
                xamlMember.Getter = get_56_ConsultResponse_comment;
                xamlMember.Setter = set_56_ConsultResponse_comment;
                break;
            case "HealthCare.Core.Models.ConsultResponse.status":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "status", "Int32");
                xamlMember.Getter = get_57_ConsultResponse_status;
                xamlMember.Setter = set_57_ConsultResponse_status;
                break;
            case "HealthCare.Core.Models.ConsultResponse.whenCreated":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "whenCreated", "Int64");
                xamlMember.Getter = get_58_ConsultResponse_whenCreated;
                xamlMember.Setter = set_58_ConsultResponse_whenCreated;
                break;
            case "HealthCare.Core.Models.ConsultResponse.doctor":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "doctor", "HealthCare.Core.Models.Doctor");
                xamlMember.Getter = get_59_ConsultResponse_doctor;
                xamlMember.Setter = set_59_ConsultResponse_doctor;
                break;
            case "HealthCare.Core.Models.ConsultResponse.createdByUserId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "createdByUserId", "String");
                xamlMember.Getter = get_60_ConsultResponse_createdByUserId;
                xamlMember.Setter = set_60_ConsultResponse_createdByUserId;
                break;
            case "HealthCare.Core.Models.ConsultResponse.IndexString":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.ConsultResponse");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IndexString", "String");
                xamlMember.Getter = get_61_ConsultResponse_IndexString;
                xamlMember.Setter = set_61_ConsultResponse_IndexString;
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.InviteMessage":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "InviteMessage", "String");
                xamlMember.Getter = get_62_ConsultViewModel_InviteMessage;
                xamlMember.Setter = set_62_ConsultViewModel_InviteMessage;
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.Email":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Email", "String");
                xamlMember.Getter = get_63_ConsultViewModel_Email;
                xamlMember.Setter = set_63_ConsultViewModel_Email;
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.ImageZoomCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ImageZoomCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_64_ConsultViewModel_ImageZoomCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.ShowInviteCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ShowInviteCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_65_ConsultViewModel_ShowInviteCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.ShowReplyCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ShowReplyCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_66_ConsultViewModel_ShowReplyCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ConsultViewModel.ReplyCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ConsultViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ReplyCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_67_ConsultViewModel_ReplyCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Behaviors.EventTriggerBehaviorBase.Actions":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.EventTriggerBehaviorBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_EventTriggerBehaviorBase_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Behaviors.EventTriggerBehaviorBase.EventName":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.EventTriggerBehaviorBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_EventTriggerBehaviorBase_EventName;
                xamlMember.Setter = set_69_EventTriggerBehaviorBase_EventName;
                break;
            case "Template10.Behaviors.EventTriggerBehaviorBase.SourceObject":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.EventTriggerBehaviorBase");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_70_EventTriggerBehaviorBase_SourceObject;
                xamlMember.Setter = set_70_EventTriggerBehaviorBase_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_71_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Win.Controls.ShowDialogAction.Dialog":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.ShowDialogAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Dialog", "Windows.UI.Xaml.Controls.ContentDialog");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_72_ShowDialogAction_Dialog;
                xamlMember.Setter = set_72_ShowDialogAction_Dialog;
                break;
            case "HealthCare.Win.Views.HomeTab.ChbaseView.RootWebView":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.ChbaseView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "RootWebView", "Windows.UI.Xaml.Controls.WebView");
                xamlMember.Getter = get_73_ChbaseView_RootWebView;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Win.Controls.DataRequestBehavior.ItemsSource":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Controls.DataRequestBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_74_DataRequestBehavior_ItemsSource;
                xamlMember.Setter = set_74_DataRequestBehavior_ItemsSource;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ListViewBase>.AssociatedObject":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior`1<Windows.UI.Xaml.Controls.ListViewBase>");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.Controls.ListViewBase");
                xamlMember.Getter = get_75_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Win.Views.HomeTab.CheckupsView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.CheckupsView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.HomeViewModel");
                xamlMember.Getter = get_76_CheckupsView_ViewModel;
                xamlMember.Setter = set_76_CheckupsView_ViewModel;
                break;
            case "HealthCare.Win.Views.HomeTab.CmeLibraryView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.CmeLibraryView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.HomeViewModel");
                xamlMember.Getter = get_77_CmeLibraryView_ViewModel;
                xamlMember.Setter = set_77_CmeLibraryView_ViewModel;
                break;
            case "HealthCare.Win.Views.HomeTab.ConsultView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.ConsultView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.HomeViewModel");
                xamlMember.Getter = get_78_ConsultView_ViewModel;
                xamlMember.Setter = set_78_ConsultView_ViewModel;
                break;
            case "HealthCare.Win.Views.HomeTab.WeekTopicView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.WeekTopicView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.HomeViewModel");
                xamlMember.Getter = get_79_WeekTopicView_ViewModel;
                xamlMember.Setter = set_79_WeekTopicView_ViewModel;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.Weeks":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Weeks", "System.Collections.Generic.List`1<Int32>");
                xamlMember.Getter = get_80_ScheduleAddingViewModel_Weeks;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.CurrentDate":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CurrentDate", "System.DateTime");
                xamlMember.Getter = get_81_ScheduleAddingViewModel_CurrentDate;
                xamlMember.Setter = set_81_ScheduleAddingViewModel_CurrentDate;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.RefreshCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "RefreshCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_82_ScheduleAddingViewModel_RefreshCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.Hospitals":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Hospitals", "System.Collections.Generic.List`1<HealthCare.Core.Models.Hospital>");
                xamlMember.Getter = get_83_ScheduleAddingViewModel_Hospitals;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.Models.Hospital.HospitalId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HospitalId", "String");
                xamlMember.Getter = get_84_Hospital_HospitalId;
                xamlMember.Setter = set_84_Hospital_HospitalId;
                break;
            case "HealthCare.Core.Models.Hospital.Id":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_85_Hospital_Id;
                xamlMember.Setter = set_85_Hospital_Id;
                break;
            case "HealthCare.Core.Models.Hospital.ParentId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ParentId", "String");
                xamlMember.Getter = get_86_Hospital_ParentId;
                xamlMember.Setter = set_86_Hospital_ParentId;
                break;
            case "HealthCare.Core.Models.Hospital.Code":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Code", "String");
                xamlMember.Getter = get_87_Hospital_Code;
                xamlMember.Setter = set_87_Hospital_Code;
                break;
            case "HealthCare.Core.Models.Hospital.Name":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_88_Hospital_Name;
                xamlMember.Setter = set_88_Hospital_Name;
                break;
            case "HealthCare.Core.Models.Hospital.Address":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Address", "String");
                xamlMember.Getter = get_89_Hospital_Address;
                xamlMember.Setter = set_89_Hospital_Address;
                break;
            case "HealthCare.Core.Models.Hospital.Location":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Location", "System.Collections.Generic.List`1<Double>");
                xamlMember.Getter = get_90_Hospital_Location;
                xamlMember.Setter = set_90_Hospital_Location;
                break;
            case "HealthCare.Core.Models.Hospital.Phones":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Phones", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_91_Hospital_Phones;
                xamlMember.Setter = set_91_Hospital_Phones;
                break;
            case "HealthCare.Core.Models.Hospital.Emails":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Emails", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_92_Hospital_Emails;
                xamlMember.Setter = set_92_Hospital_Emails;
                break;
            case "HealthCare.Core.Models.Hospital.SchedulingFee":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SchedulingFee", "Double");
                xamlMember.Getter = get_93_Hospital_SchedulingFee;
                xamlMember.Setter = set_93_Hospital_SchedulingFee;
                break;
            case "HealthCare.Core.Models.Hospital.CheckupFee":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CheckupFee", "Double");
                xamlMember.Getter = get_94_Hospital_CheckupFee;
                xamlMember.Setter = set_94_Hospital_CheckupFee;
                break;
            case "HealthCare.Core.Models.Hospital.Photos":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Photos", "HealthCare.Core.Models.Photos");
                xamlMember.Getter = get_95_Hospital_Photos;
                xamlMember.Setter = set_95_Hospital_Photos;
                break;
            case "HealthCare.Core.Models.Hospital.CheckupTypeIds":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CheckupTypeIds", "Object");
                xamlMember.Getter = get_96_Hospital_CheckupTypeIds;
                xamlMember.Setter = set_96_Hospital_CheckupTypeIds;
                break;
            case "HealthCare.Core.Models.Hospital.ScbMid":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ScbMid", "Object");
                xamlMember.Getter = get_97_Hospital_ScbMid;
                xamlMember.Setter = set_97_Hospital_ScbMid;
                break;
            case "HealthCare.Core.Models.Hospital.ScbTid":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ScbTid", "Object");
                xamlMember.Getter = get_98_Hospital_ScbTid;
                xamlMember.Setter = set_98_Hospital_ScbTid;
                break;
            case "HealthCare.Core.Models.Hospital.Status":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Status", "Object");
                xamlMember.Getter = get_99_Hospital_Status;
                xamlMember.Setter = set_99_Hospital_Status;
                break;
            case "HealthCare.Core.Models.Hospital.CityId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CityId", "String");
                xamlMember.Getter = get_100_Hospital_CityId;
                xamlMember.Setter = set_100_Hospital_CityId;
                break;
            case "HealthCare.Core.Models.Hospital.DistrictId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DistrictId", "String");
                xamlMember.Getter = get_101_Hospital_DistrictId;
                xamlMember.Setter = set_101_Hospital_DistrictId;
                break;
            case "HealthCare.Core.Models.Hospital.IsFamousHospital":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsFamousHospital", "Boolean");
                xamlMember.Getter = get_102_Hospital_IsFamousHospital;
                xamlMember.Setter = set_102_Hospital_IsFamousHospital;
                break;
            case "HealthCare.Core.Models.Hospital.IsCLASHospital":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsCLASHospital", "Boolean");
                xamlMember.Getter = get_103_Hospital_IsCLASHospital;
                xamlMember.Setter = set_103_Hospital_IsCLASHospital;
                break;
            case "HealthCare.Core.Models.Hospital.AdminUsers":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "AdminUsers", "Object");
                xamlMember.Getter = get_104_Hospital_AdminUsers;
                xamlMember.Setter = set_104_Hospital_AdminUsers;
                break;
            case "HealthCare.Core.Models.Hospital.ClassharePercent":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ClassharePercent", "Int32");
                xamlMember.Getter = get_105_Hospital_ClassharePercent;
                xamlMember.Setter = set_105_Hospital_ClassharePercent;
                break;
            case "HealthCare.Core.Models.Hospital.Roles":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Hospital");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Roles", "System.Collections.Generic.List`1<Int32>");
                xamlMember.Getter = get_106_Hospital_Roles;
                xamlMember.Setter = set_106_Hospital_Roles;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.Hospital":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Hospital", "HealthCare.Core.Models.Hospital");
                xamlMember.Getter = get_107_ScheduleAddingViewModel_Hospital;
                xamlMember.Setter = set_107_ScheduleAddingViewModel_Hospital;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.StartTime":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "StartTime", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_108_ScheduleAddingViewModel_StartTime;
                xamlMember.Setter = set_108_ScheduleAddingViewModel_StartTime;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.DaySource":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DaySource", "System.Collections.Generic.List`1<HealthCare.Core.Models.Enums.DoctorDayOfWeekObject>");
                xamlMember.Getter = get_109_ScheduleAddingViewModel_DaySource;
                xamlMember.Setter = set_109_ScheduleAddingViewModel_DaySource;
                break;
            case "HealthCare.Core.Models.Enums.DoctorDayOfWeekObject.Value":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Enums.DoctorDayOfWeekObject");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Value", "HealthCare.Core.Models.Enums.DoctorDayOfWeek");
                xamlMember.Getter = get_110_DoctorDayOfWeekObject_Value;
                xamlMember.Setter = set_110_DoctorDayOfWeekObject_Value;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.EndTime":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "EndTime", "System.Nullable`1<System.DateTime>");
                xamlMember.Getter = get_111_ScheduleAddingViewModel_EndTime;
                xamlMember.Setter = set_111_ScheduleAddingViewModel_EndTime;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.SaveCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SaveCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_112_ScheduleAddingViewModel_SaveCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.Quality":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Quality", "Int32");
                xamlMember.Getter = get_113_ScheduleAddingViewModel_Quality;
                xamlMember.Setter = set_113_ScheduleAddingViewModel_Quality;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.DayOfWeeks":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DayOfWeeks", "HealthCare.Core.Models.Enums.DoctorDayOfWeek[]");
                xamlMember.Getter = get_114_ScheduleAddingViewModel_DayOfWeeks;
                xamlMember.Setter = set_114_ScheduleAddingViewModel_DayOfWeeks;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.BoolDoctorDayofWeeks":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "BoolDoctorDayofWeeks", "System.Collections.Generic.List`1<HealthCare.Core.ViewModels.BoolDoctorDayofWeek>");
                xamlMember.Getter = get_115_ScheduleAddingViewModel_BoolDoctorDayofWeeks;
                xamlMember.Setter = set_115_ScheduleAddingViewModel_BoolDoctorDayofWeeks;
                break;
            case "HealthCare.Core.ViewModels.BoolDoctorDayofWeek.isSelected":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.BoolDoctorDayofWeek");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "isSelected", "Boolean");
                xamlMember.Getter = get_116_BoolDoctorDayofWeek_isSelected;
                xamlMember.Setter = set_116_BoolDoctorDayofWeek_isSelected;
                break;
            case "HealthCare.Core.ViewModels.BoolDoctorDayofWeek.DoctorDayOfWeek":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.BoolDoctorDayofWeek");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DoctorDayOfWeek", "HealthCare.Core.Models.Enums.DoctorDayOfWeek");
                xamlMember.Getter = get_117_BoolDoctorDayofWeek_DoctorDayOfWeek;
                xamlMember.Setter = set_117_BoolDoctorDayofWeek_DoctorDayOfWeek;
                break;
            case "HealthCare.Core.ViewModels.BoolDoctorDayofWeek.SelectDayString":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.BoolDoctorDayofWeek");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SelectDayString", "String");
                xamlMember.Getter = get_118_BoolDoctorDayofWeek_SelectDayString;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.ListBoolDoctorDayofWeek":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ListBoolDoctorDayofWeek", "HealthCare.Core.ViewModels.ListBoolDoctorDayofWeek");
                xamlMember.Getter = get_119_ScheduleAddingViewModel_ListBoolDoctorDayofWeek;
                xamlMember.Setter = set_119_ScheduleAddingViewModel_ListBoolDoctorDayofWeek;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.EndDate":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "EndDate", "System.DateTime");
                xamlMember.Getter = get_120_ScheduleAddingViewModel_EndDate;
                xamlMember.Setter = set_120_ScheduleAddingViewModel_EndDate;
                break;
            case "HealthCare.Core.ViewModels.ScheduleAddingViewModel.WeekCount":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ScheduleAddingViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "WeekCount", "Int32");
                xamlMember.Getter = get_121_ScheduleAddingViewModel_WeekCount;
                xamlMember.Setter = set_121_ScheduleAddingViewModel_WeekCount;
                break;
            case "HealthCare.Core.ViewModels.SetPasswordViewModel.OldPassword":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SetPasswordViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "OldPassword", "String");
                xamlMember.Getter = get_122_SetPasswordViewModel_OldPassword;
                xamlMember.Setter = set_122_SetPasswordViewModel_OldPassword;
                break;
            case "HealthCare.Core.ViewModels.SetPasswordViewModel.NewPassword":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SetPasswordViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NewPassword", "String");
                xamlMember.Getter = get_123_SetPasswordViewModel_NewPassword;
                xamlMember.Setter = set_123_SetPasswordViewModel_NewPassword;
                break;
            case "HealthCare.Core.ViewModels.SetPasswordViewModel.ConfirmPassword":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SetPasswordViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ConfirmPassword", "String");
                xamlMember.Getter = get_124_SetPasswordViewModel_ConfirmPassword;
                xamlMember.Setter = set_124_SetPasswordViewModel_ConfirmPassword;
                break;
            case "HealthCare.Core.ViewModels.SetPasswordViewModel.SetPasswordCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SetPasswordViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SetPasswordCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_125_SetPasswordViewModel_SetPasswordCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_DataTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Binding":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Binding", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_127_DataTriggerBehavior_Binding;
                xamlMember.Setter = set_127_DataTriggerBehavior_Binding;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Value":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_DataTriggerBehavior_Value;
                xamlMember.Setter = set_128_DataTriggerBehavior_Value;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.ComparisonCondition":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ComparisonCondition", "Microsoft.Xaml.Interactions.Core.ComparisonConditionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_DataTriggerBehavior_ComparisonCondition;
                xamlMember.Setter = set_129_DataTriggerBehavior_ComparisonCondition;
                break;
            case "Template10.Behaviors.ConditionalAction.Actions":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.ConditionalAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_ConditionalAction_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Behaviors.ConditionalAction.LeftValue":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.ConditionalAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "LeftValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_ConditionalAction_LeftValue;
                xamlMember.Setter = set_131_ConditionalAction_LeftValue;
                break;
            case "Template10.Behaviors.ConditionalAction.Operator":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.ConditionalAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Operator", "Template10.Behaviors.ConditionalAction.Operators");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_ConditionalAction_Operator;
                xamlMember.Setter = set_132_ConditionalAction_Operator;
                break;
            case "Template10.Behaviors.ConditionalAction.RightValue":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.ConditionalAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "RightValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_ConditionalAction_RightValue;
                xamlMember.Setter = set_133_ConditionalAction_RightValue;
                break;
            case "Microsoft.Xaml.Interactions.Core.ChangePropertyAction.PropertyName":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.ChangePropertyAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PropertyName", "Windows.UI.Xaml.PropertyPath");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_ChangePropertyAction_PropertyName;
                xamlMember.Setter = set_134_ChangePropertyAction_PropertyName;
                break;
            case "Microsoft.Xaml.Interactions.Core.ChangePropertyAction.TargetObject":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.ChangePropertyAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "TargetObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_ChangePropertyAction_TargetObject;
                xamlMember.Setter = set_135_ChangePropertyAction_TargetObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.ChangePropertyAction.Value":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.ChangePropertyAction");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_ChangePropertyAction_Value;
                xamlMember.Setter = set_136_ChangePropertyAction_Value;
                break;
            case "Template10.Controls.HamburgerButtonInfo.Content":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Content", "Windows.UI.Xaml.UIElement");
                xamlMember.Getter = get_137_HamburgerButtonInfo_Content;
                xamlMember.Setter = set_137_HamburgerButtonInfo_Content;
                break;
            case "Template10.Controls.HamburgerButtonInfo.ButtonType":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ButtonType", "Template10.Controls.HamburgerButtonInfo.ButtonTypes");
                xamlMember.Getter = get_138_HamburgerButtonInfo_ButtonType;
                xamlMember.Setter = set_138_HamburgerButtonInfo_ButtonType;
                break;
            case "Template10.Controls.HamburgerButtonInfo.NavigationTransitionInfo":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavigationTransitionInfo", "Windows.UI.Xaml.Media.Animation.NavigationTransitionInfo");
                xamlMember.Getter = get_139_HamburgerButtonInfo_NavigationTransitionInfo;
                xamlMember.Setter = set_139_HamburgerButtonInfo_NavigationTransitionInfo;
                break;
            case "Template10.Controls.HamburgerButtonInfo.PageType":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PageType", "System.Type");
                xamlMember.Getter = get_140_HamburgerButtonInfo_PageType;
                xamlMember.Setter = set_140_HamburgerButtonInfo_PageType;
                break;
            case "Template10.Controls.HamburgerButtonInfo.PageParameter":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PageParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_HamburgerButtonInfo_PageParameter;
                xamlMember.Setter = set_141_HamburgerButtonInfo_PageParameter;
                break;
            case "Template10.Controls.HamburgerButtonInfo.ClearHistory":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ClearHistory", "Boolean");
                xamlMember.Getter = get_142_HamburgerButtonInfo_ClearHistory;
                xamlMember.Setter = set_142_HamburgerButtonInfo_ClearHistory;
                break;
            case "Template10.Controls.HamburgerButtonInfo.Visibility":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Visibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_HamburgerButtonInfo_Visibility;
                xamlMember.Setter = set_143_HamburgerButtonInfo_Visibility;
                break;
            case "Template10.Controls.HamburgerButtonInfo.IsEnabled":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_HamburgerButtonInfo_IsEnabled;
                xamlMember.Setter = set_144_HamburgerButtonInfo_IsEnabled;
                break;
            case "Template10.Controls.HamburgerButtonInfo.IsChecked":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsChecked", "System.Nullable`1<Boolean>");
                xamlMember.Getter = get_145_HamburgerButtonInfo_IsChecked;
                xamlMember.Setter = set_145_HamburgerButtonInfo_IsChecked;
                break;
            case "Template10.Controls.HamburgerButtonInfo.MaxWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerButtonInfo");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_146_HamburgerButtonInfo_MaxWidth;
                xamlMember.Setter = set_146_HamburgerButtonInfo_MaxWidth;
                break;
            case "Template10.Controls.HamburgerMenu.PrimaryButtons":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PrimaryButtons", "System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_HamburgerMenu_PrimaryButtons;
                xamlMember.Setter = set_147_HamburgerMenu_PrimaryButtons;
                break;
            case "Template10.Controls.HamburgerMenu.NavAreaBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavAreaBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_HamburgerMenu_NavAreaBackground;
                xamlMember.Setter = set_148_HamburgerMenu_NavAreaBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonForeground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavButtonForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_HamburgerMenu_NavButtonForeground;
                xamlMember.Setter = set_149_HamburgerMenu_NavButtonForeground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonCheckedBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavButtonCheckedBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_HamburgerMenu_NavButtonCheckedBackground;
                xamlMember.Setter = set_150_HamburgerMenu_NavButtonCheckedBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavButtonBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_HamburgerMenu_NavButtonBackground;
                xamlMember.Setter = set_151_HamburgerMenu_NavButtonBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonHoverBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavButtonHoverBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_HamburgerMenu_NavButtonHoverBackground;
                xamlMember.Setter = set_152_HamburgerMenu_NavButtonHoverBackground;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonPressedBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavButtonPressedBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_HamburgerMenu_NavButtonPressedBackground;
                xamlMember.Setter = set_153_HamburgerMenu_NavButtonPressedBackground;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HamburgerBackground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_HamburgerMenu_HamburgerBackground;
                xamlMember.Setter = set_154_HamburgerMenu_HamburgerBackground;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerForeground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HamburgerForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_HamburgerMenu_HamburgerForeground;
                xamlMember.Setter = set_155_HamburgerMenu_HamburgerForeground;
                break;
            case "Template10.Controls.HamburgerMenu.DisplayMode":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DisplayMode", "Windows.UI.Xaml.Controls.SplitViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_HamburgerMenu_DisplayMode;
                xamlMember.Setter = set_156_HamburgerMenu_DisplayMode;
                break;
            case "Template10.Controls.HamburgerMenu.NavCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavCommand", "Template10.Mvvm.MvxCommand`1<Template10.Controls.HamburgerButtonInfo>");
                xamlMember.Getter = get_157_HamburgerMenu_NavCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateNarrowMinWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "VisualStateNarrowMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_HamburgerMenu_VisualStateNarrowMinWidth;
                xamlMember.Setter = set_158_HamburgerMenu_VisualStateNarrowMinWidth;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateNormalMinWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "VisualStateNormalMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_HamburgerMenu_VisualStateNormalMinWidth;
                xamlMember.Setter = set_159_HamburgerMenu_VisualStateNormalMinWidth;
                break;
            case "Template10.Controls.HamburgerMenu.VisualStateWideMinWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "VisualStateWideMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_HamburgerMenu_VisualStateWideMinWidth;
                xamlMember.Setter = set_160_HamburgerMenu_VisualStateWideMinWidth;
                break;
            case "Template10.Controls.HamburgerMenu.SecondaryButtonOrientation":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SecondaryButtonOrientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_HamburgerMenu_SecondaryButtonOrientation;
                xamlMember.Setter = set_161_HamburgerMenu_SecondaryButtonOrientation;
                break;
            case "Template10.Controls.HamburgerMenu.AccentColor":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "AccentColor", "Windows.UI.Color");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_162_HamburgerMenu_AccentColor;
                xamlMember.Setter = set_162_HamburgerMenu_AccentColor;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerButtonVisibility":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HamburgerButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_HamburgerMenu_HamburgerButtonVisibility;
                xamlMember.Setter = set_163_HamburgerMenu_HamburgerButtonVisibility;
                break;
            case "Template10.Controls.HamburgerMenu.SecondarySeparator":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SecondarySeparator", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_HamburgerMenu_SecondarySeparator;
                xamlMember.Setter = set_164_HamburgerMenu_SecondarySeparator;
                break;
            case "Template10.Controls.HamburgerMenu.PaneBorderBrush":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PaneBorderBrush", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_HamburgerMenu_PaneBorderBrush;
                xamlMember.Setter = set_165_HamburgerMenu_PaneBorderBrush;
                break;
            case "Template10.Controls.HamburgerMenu.NavButtonCheckedForeground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavButtonCheckedForeground", "Windows.UI.Xaml.Media.SolidColorBrush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_166_HamburgerMenu_NavButtonCheckedForeground;
                xamlMember.Setter = set_166_HamburgerMenu_NavButtonCheckedForeground;
                break;
            case "Template10.Controls.HamburgerMenu.Selected":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Selected", "Template10.Controls.HamburgerButtonInfo");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_HamburgerMenu_Selected;
                xamlMember.Setter = set_167_HamburgerMenu_Selected;
                break;
            case "Template10.Controls.HamburgerMenu.IsOpen":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_HamburgerMenu_IsOpen;
                xamlMember.Setter = set_168_HamburgerMenu_IsOpen;
                break;
            case "Template10.Controls.HamburgerMenu.NavigationService":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "NavigationService", "Template10.Services.NavigationService.INavigationService");
                xamlMember.Getter = get_169_HamburgerMenu_NavigationService;
                xamlMember.Setter = set_169_HamburgerMenu_NavigationService;
                break;
            case "Template10.Controls.HamburgerMenu.IsFullScreen":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsFullScreen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_HamburgerMenu_IsFullScreen;
                xamlMember.Setter = set_170_HamburgerMenu_IsFullScreen;
                break;
            case "Template10.Controls.HamburgerMenu.SecondaryButtons":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SecondaryButtons", "System.Collections.ObjectModel.ObservableCollection`1<Template10.Controls.HamburgerButtonInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_HamburgerMenu_SecondaryButtons;
                xamlMember.Setter = set_171_HamburgerMenu_SecondaryButtons;
                break;
            case "Template10.Controls.HamburgerMenu.PaneWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PaneWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_HamburgerMenu_PaneWidth;
                xamlMember.Setter = set_172_HamburgerMenu_PaneWidth;
                break;
            case "Template10.Controls.HamburgerMenu.PaneBorderThickness":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "PaneBorderThickness", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_HamburgerMenu_PaneBorderThickness;
                xamlMember.Setter = set_173_HamburgerMenu_PaneBorderThickness;
                break;
            case "Template10.Controls.HamburgerMenu.HeaderContent":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HeaderContent", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_HamburgerMenu_HeaderContent;
                xamlMember.Setter = set_174_HamburgerMenu_HeaderContent;
                break;
            case "Template10.Controls.HamburgerMenu.HamburgerButtonGridWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HamburgerButtonGridWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_HamburgerMenu_HamburgerButtonGridWidth;
                xamlMember.Setter = set_175_HamburgerMenu_HamburgerButtonGridWidth;
                break;
            case "Template10.Controls.HamburgerMenu.OpenCloseMode":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.HamburgerMenu");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "OpenCloseMode", "Template10.Controls.HamburgerMenu.OpenCloseModes");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_HamburgerMenu_OpenCloseMode;
                xamlMember.Setter = set_176_HamburgerMenu_OpenCloseMode;
                break;
            case "Template10.Controls.ModalDialog.ModalBackground":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.ModalDialog");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ModalBackground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_ModalDialog_ModalBackground;
                xamlMember.Setter = set_177_ModalDialog_ModalBackground;
                break;
            case "Template10.Controls.ModalDialog.IsModal":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.ModalDialog");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsModal", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_ModalDialog_IsModal;
                xamlMember.Setter = set_178_ModalDialog_IsModal;
                break;
            case "Template10.Controls.ModalDialog.CanBackButtonDismiss":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.ModalDialog");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CanBackButtonDismiss", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_ModalDialog_CanBackButtonDismiss;
                xamlMember.Setter = set_179_ModalDialog_CanBackButtonDismiss;
                break;
            case "Template10.Controls.ModalDialog.DisableBackButtonWhenModal":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.ModalDialog");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DisableBackButtonWhenModal", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_ModalDialog_DisableBackButtonWhenModal;
                xamlMember.Setter = set_180_ModalDialog_DisableBackButtonWhenModal;
                break;
            case "Template10.Controls.ModalDialog.ModalContent":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.ModalDialog");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ModalContent", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_ModalDialog_ModalContent;
                xamlMember.Setter = set_181_ModalDialog_ModalContent;
                break;
            case "Template10.Controls.ModalDialog.ModalTransitions":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.ModalDialog");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ModalTransitions", "Windows.UI.Xaml.Media.Animation.TransitionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_ModalDialog_ModalTransitions;
                xamlMember.Setter = set_182_ModalDialog_ModalTransitions;
                break;
            case "Template10.Controls.PageHeader.BackButtonVisibility":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "BackButtonVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_183_PageHeader_BackButtonVisibility;
                xamlMember.Setter = set_183_PageHeader_BackButtonVisibility;
                break;
            case "Template10.Controls.PageHeader.BackButtonContent":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "BackButtonContent", "Windows.UI.Xaml.Controls.Symbol");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_184_PageHeader_BackButtonContent;
                xamlMember.Setter = set_184_PageHeader_BackButtonContent;
                break;
            case "Template10.Controls.PageHeader.Frame":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Frame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_185_PageHeader_Frame;
                xamlMember.Setter = set_185_PageHeader_Frame;
                break;
            case "Template10.Controls.PageHeader.VisualStateNarrowMinWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "VisualStateNarrowMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_186_PageHeader_VisualStateNarrowMinWidth;
                xamlMember.Setter = set_186_PageHeader_VisualStateNarrowMinWidth;
                break;
            case "Template10.Controls.PageHeader.VisualStateNormalMinWidth":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "VisualStateNormalMinWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_PageHeader_VisualStateNormalMinWidth;
                xamlMember.Setter = set_187_PageHeader_VisualStateNormalMinWidth;
                break;
            case "Template10.Controls.PageHeader.Text":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.PageHeader");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_188_PageHeader_Text;
                xamlMember.Setter = set_188_PageHeader_Text;
                break;
            case "Template10.Behaviors.NavButtonBehavior.Direction":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.NavButtonBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Direction", "Template10.Behaviors.NavButtonBehavior.Directions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_NavButtonBehavior_Direction;
                xamlMember.Setter = set_189_NavButtonBehavior_Direction;
                break;
            case "Template10.Behaviors.NavButtonBehavior.Frame":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.NavButtonBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Frame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_NavButtonBehavior_Frame;
                xamlMember.Setter = set_190_NavButtonBehavior_Frame;
                break;
            case "Template10.Behaviors.NavButtonBehavior.AssociatedObject":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Behaviors.NavButtonBehavior");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_191_NavButtonBehavior_AssociatedObject;
                xamlMember.Setter = set_191_NavButtonBehavior_AssociatedObject;
                break;
            case "Template10.Controls.Resizer.ElementControl":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ElementControl", "Windows.UI.Xaml.Controls.Control");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_192_Resizer_ElementControl;
                xamlMember.Setter = set_192_Resizer_ElementControl;
                break;
            case "Template10.Controls.Resizer.GrabberBrush":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "GrabberBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_193_Resizer_GrabberBrush;
                xamlMember.Setter = set_193_Resizer_GrabberBrush;
                break;
            case "Template10.Controls.Resizer.GrabberVisibility":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "GrabberVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_194_Resizer_GrabberVisibility;
                xamlMember.Setter = set_194_Resizer_GrabberVisibility;
                break;
            case "Template10.Controls.Resizer.GrabberSize":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Template10.Controls.Resizer");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "GrabberSize", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_195_Resizer_GrabberSize;
                xamlMember.Setter = set_195_Resizer_GrabberSize;
                break;
            case "HealthCare.Win.Views.HomeTab.SettingView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.SettingView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.HomeViewModel");
                xamlMember.Getter = get_196_SettingView_ViewModel;
                xamlMember.Setter = set_196_SettingView_ViewModel;
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.UserName":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "UserName", "String");
                xamlMember.Getter = get_197_LoginViewModel_UserName;
                xamlMember.Setter = set_197_LoginViewModel_UserName;
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.Password":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Password", "String");
                xamlMember.Getter = get_198_LoginViewModel_Password;
                xamlMember.Setter = set_198_LoginViewModel_Password;
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.Remember":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Remember", "Boolean");
                xamlMember.Getter = get_199_LoginViewModel_Remember;
                xamlMember.Setter = set_199_LoginViewModel_Remember;
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.LoginCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "LoginCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_200_LoginViewModel_LoginCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.SignUpCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SignUpCommand", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_201_LoginViewModel_SignUpCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.ResetCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ResetCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_202_LoginViewModel_ResetCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.LoginViewModel.Loading":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Loading", "Boolean");
                xamlMember.Getter = get_203_LoginViewModel_Loading;
                xamlMember.Setter = set_203_LoginViewModel_Loading;
                break;
            case "HealthCare.Win.Views.LoginView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.LoginView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.LoginViewModel");
                xamlMember.Getter = get_204_LoginView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.ResetPassViewModel.Email":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ResetPassViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Email", "String");
                xamlMember.Getter = get_205_ResetPassViewModel_Email;
                xamlMember.Setter = set_205_ResetPassViewModel_Email;
                break;
            case "HealthCare.Core.ViewModels.ResetPassViewModel.ResetPassCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ResetPassViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ResetPassCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_206_ResetPassViewModel_ResetPassCommand;
                xamlMember.Setter = set_206_ResetPassViewModel_ResetPassCommand;
                break;
            case "HealthCare.Core.ViewModels.ResetPassViewModel.BackCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.ResetPassViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "BackCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_207_ResetPassViewModel_BackCommand;
                xamlMember.Setter = set_207_ResetPassViewModel_BackCommand;
                break;
            case "HealthCare.Win.Views.HomeTab.ScheduleView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.HomeTab.ScheduleView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.HomeViewModel");
                xamlMember.Getter = get_208_ScheduleView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.Loading":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Loading", "Boolean");
                xamlMember.Getter = get_209_SignUpViewModel_Loading;
                xamlMember.Setter = set_209_SignUpViewModel_Loading;
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.Account":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Account", "HealthCare.Core.Models.SignUpInfo");
                xamlMember.Getter = get_210_SignUpViewModel_Account;
                xamlMember.Setter = set_210_SignUpViewModel_Account;
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.Cities":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Cities", "System.Collections.Generic.List`1<HealthCare.Core.Models.City>");
                xamlMember.Getter = get_211_SignUpViewModel_Cities;
                xamlMember.Setter = set_211_SignUpViewModel_Cities;
                break;
            case "HealthCare.Core.Models.City.Id":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.City");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_212_City_Id;
                xamlMember.Setter = set_212_City_Id;
                break;
            case "HealthCare.Core.Models.City.Name":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.City");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_213_City_Name;
                xamlMember.Setter = set_213_City_Name;
                break;
            case "HealthCare.Core.Models.City.IsUsedForDoctorSearch":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.City");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsUsedForDoctorSearch", "Boolean");
                xamlMember.Getter = get_214_City_IsUsedForDoctorSearch;
                xamlMember.Setter = set_214_City_IsUsedForDoctorSearch;
                break;
            case "HealthCare.Core.Models.City.Districts":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.City");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Districts", "System.Collections.Generic.List`1<HealthCare.Core.Models.District>");
                xamlMember.Getter = get_215_City_Districts;
                xamlMember.Setter = set_215_City_Districts;
                break;
            case "HealthCare.Core.Models.District.Id":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.District");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_216_District_Id;
                xamlMember.Setter = set_216_District_Id;
                break;
            case "HealthCare.Core.Models.District.CityId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.District");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CityId", "String");
                xamlMember.Getter = get_217_District_CityId;
                xamlMember.Setter = set_217_District_CityId;
                break;
            case "HealthCare.Core.Models.District.Name":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.District");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_218_District_Name;
                xamlMember.Setter = set_218_District_Name;
                break;
            case "HealthCare.Core.Models.District.Location":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.District");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Location", "System.Collections.Generic.List`1<Double>");
                xamlMember.Getter = get_219_District_Location;
                xamlMember.Setter = set_219_District_Location;
                break;
            case "HealthCare.Core.Models.District.City":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.District");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "City", "HealthCare.Core.Models.City");
                xamlMember.Getter = get_220_District_City;
                xamlMember.Setter = set_220_District_City;
                break;
            case "HealthCare.Core.Models.City.DistrictNames":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.City");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "DistrictNames", "System.Collections.Generic.List`1<String>");
                xamlMember.Getter = get_221_City_DistrictNames;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.CheckupTypes":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CheckupTypes", "System.Collections.Generic.List`1<HealthCare.Core.Models.CheckupType>");
                xamlMember.Getter = get_222_SignUpViewModel_CheckupTypes;
                xamlMember.Setter = set_222_SignUpViewModel_CheckupTypes;
                break;
            case "HealthCare.Core.Models.CheckupType.Id":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CheckupType");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Id", "String");
                xamlMember.Getter = get_223_CheckupType_Id;
                xamlMember.Setter = set_223_CheckupType_Id;
                break;
            case "HealthCare.Core.Models.CheckupType.Name":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CheckupType");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Name", "HealthCare.Core.Models.NameMap");
                xamlMember.Getter = get_224_CheckupType_Name;
                xamlMember.Setter = set_224_CheckupType_Name;
                break;
            case "HealthCare.Core.Models.CheckupType.HospitalId":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CheckupType");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "HospitalId", "Object");
                xamlMember.Getter = get_225_CheckupType_HospitalId;
                xamlMember.Setter = set_225_CheckupType_HospitalId;
                break;
            case "HealthCare.Core.Models.CheckupType.Status":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.CheckupType");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Status", "Boolean");
                xamlMember.Getter = get_226_CheckupType_Status;
                xamlMember.Setter = set_226_CheckupType_Status;
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.SignUpCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SignUpCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_227_SignUpViewModel_SignUpCommand;
                xamlMember.Setter = set_227_SignUpViewModel_SignUpCommand;
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.BackCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "BackCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_228_SignUpViewModel_BackCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.Districts":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Districts", "System.Collections.Generic.List`1<HealthCare.Core.Models.District>");
                xamlMember.Getter = get_229_SignUpViewModel_Districts;
                xamlMember.Setter = set_229_SignUpViewModel_Districts;
                break;
            case "HealthCare.Core.ViewModels.SignUpViewModel.Genders":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.SignUpViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Genders", "System.Collections.Generic.List`1<HealthCare.Core.Models.Gender>");
                xamlMember.Getter = get_230_SignUpViewModel_Genders;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.Models.Gender.IsFemale":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Gender");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "IsFemale", "Boolean");
                xamlMember.Getter = get_231_Gender_IsFemale;
                xamlMember.Setter = set_231_Gender_IsFemale;
                break;
            case "HealthCare.Core.Models.Gender.Value":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.Models.Gender");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Value", "String");
                xamlMember.Getter = get_232_Gender_Value;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.GenderCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "GenderCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_233_UpdateProfileViewModel_GenderCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.SaveCommand":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "SaveCommand", "Template10.Mvvm.MvxCommand");
                xamlMember.Getter = get_234_UpdateProfileViewModel_SaveCommand;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.Loading":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Loading", "Boolean");
                xamlMember.Getter = get_235_UpdateProfileViewModel_Loading;
                xamlMember.Setter = set_235_UpdateProfileViewModel_Loading;
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.Genders":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Genders", "System.Collections.Generic.List`1<HealthCare.Core.Models.Gender>");
                xamlMember.Getter = get_236_UpdateProfileViewModel_Genders;
                xamlMember.SetIsReadOnly();
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.Account":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Account", "HealthCare.Core.Models.Doctor");
                xamlMember.Getter = get_237_UpdateProfileViewModel_Account;
                xamlMember.Setter = set_237_UpdateProfileViewModel_Account;
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.Cities":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Cities", "System.Collections.Generic.List`1<HealthCare.Core.Models.City>");
                xamlMember.Getter = get_238_UpdateProfileViewModel_Cities;
                xamlMember.Setter = set_238_UpdateProfileViewModel_Cities;
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.Districts":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "Districts", "System.Collections.Generic.List`1<HealthCare.Core.Models.District>");
                xamlMember.Getter = get_239_UpdateProfileViewModel_Districts;
                xamlMember.Setter = set_239_UpdateProfileViewModel_Districts;
                break;
            case "HealthCare.Core.ViewModels.UpdateProfileViewModel.CheckupTypes":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "CheckupTypes", "System.Collections.Generic.List`1<HealthCare.Core.Models.CheckupType>");
                xamlMember.Getter = get_240_UpdateProfileViewModel_CheckupTypes;
                xamlMember.Setter = set_240_UpdateProfileViewModel_CheckupTypes;
                break;
            case "HealthCare.Win.Views.UpdateProfileView.ViewModel":
                userType = (global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlUserType)GetXamlTypeByName("HealthCare.Win.Views.UpdateProfileView");
                xamlMember = new global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlMember(this, "ViewModel", "HealthCare.Core.ViewModels.UpdateProfileViewModel");
                xamlMember.Getter = get_241_UpdateProfileView_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlSystemBaseType
    {
        global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::HealthCare.Win.HealthCare_Win_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

