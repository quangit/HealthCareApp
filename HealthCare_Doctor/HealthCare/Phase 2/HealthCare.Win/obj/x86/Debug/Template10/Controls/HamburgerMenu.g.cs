#pragma checksum "D:\SVN\HealthcareProject\HealthCare_Doctor\HealthCare\Phase 2\HealthCare.Win\Template10\Controls\HamburgerMenu.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "2724A254C5EF8F587BFAFDC4C94B485F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Template10.Controls
{
    partial class HamburgerMenu : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_SplitView_OpenPaneLength(global::Windows.UI.Xaml.Controls.SplitView obj, global::System.Double value)
            {
                obj.OpenPaneLength = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Width(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.Width = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Panel_Background(global::Windows.UI.Xaml.Controls.Panel obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Background(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Background = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_Foreground(global::Windows.UI.Xaml.Controls.Control obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Foreground = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Grid_BorderBrush(global::Windows.UI.Xaml.Controls.Grid obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.BorderBrush = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Grid_BorderThickness(global::Windows.UI.Xaml.Controls.Grid obj, global::Windows.UI.Xaml.Thickness value)
            {
                obj.BorderThickness = value;
            }
            public static void Set_Template10_Behaviors_ConditionalAction_LeftValue(global::Template10.Behaviors.ConditionalAction obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.LeftValue = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_MaxWidth(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Double value)
            {
                obj.MaxWidth = value;
            }
            public static void Set_Windows_UI_Xaml_FrameworkElement_Tag(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
        };

        private class HamburgerMenu_obj3_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHamburgerMenu_Bindings
        {
            private global::Template10.Controls.HamburgerButtonInfo dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj3;

            private HamburgerMenu_obj3_BindingsTracking bindingsTracking;

            public HamburgerMenu_obj3_Bindings()
            {
                this.bindingsTracking = new HamburgerMenu_obj3_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3:
                        this.obj3 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RadioButton)target);
                        (this.obj3.Target as global::Windows.UI.Xaml.Controls.RadioButton).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.FrameworkElement.MaxWidthProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                                if (this.initialized)
                                {
                                    // Update Two Way binding
                                    this.dataRoot.MaxWidth = (this.obj3.Target as global::Windows.UI.Xaml.Controls.RadioButton).MaxWidth;
                                }
                            });
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 global::Template10.Controls.HamburgerButtonInfo data = args.NewValue as global::Template10.Controls.HamburgerButtonInfo;
                 if (args.NewValue != null && data == null)
                 {
                    throw new global::System.ArgumentException("Incorrect type passed into template. Based on the x:DataType global::Template10.Controls.HamburgerButtonInfo was expected.");
                 }
                 this.SetDataRoot(data);
                 this.Update();
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item as global::Template10.Controls.HamburgerButtonInfo);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.RadioButton)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Template10.Controls.HamburgerButtonInfo) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IHamburgerMenu_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // HamburgerMenu_obj3_Bindings

            public void SetDataRoot(global::Template10.Controls.HamburgerButtonInfo newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Template10.Controls.HamburgerButtonInfo obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MaxWidth(obj.MaxWidth, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Content(obj.Content, phase);
                    }
                }
            }
            private void Update_MaxWidth(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_MaxWidth(this.obj3.Target as global::Windows.UI.Xaml.Controls.RadioButton, obj);
                }
            }
            private void Update_Content(global::Windows.UI.Xaml.UIElement obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Tag(this.obj3.Target as global::Windows.UI.Xaml.Controls.RadioButton, obj, null);
                }
            }

            private class HamburgerMenu_obj3_BindingsTracking
            {
                global::System.WeakReference<HamburgerMenu_obj3_Bindings> WeakRefToBindingObj; 

                public HamburgerMenu_obj3_BindingsTracking(HamburgerMenu_obj3_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<HamburgerMenu_obj3_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    HamburgerMenu_obj3_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::Template10.Controls.HamburgerButtonInfo obj = sender as global::Template10.Controls.HamburgerButtonInfo;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_MaxWidth(obj.MaxWidth, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "MaxWidth":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MaxWidth(obj.MaxWidth, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Template10.Controls.HamburgerButtonInfo obj)
                {
                    HamburgerMenu_obj3_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        private class HamburgerMenu_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IHamburgerMenu_Bindings
        {
            private global::Template10.Controls.HamburgerMenu dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.SplitView obj14;
            private global::Windows.UI.Xaml.Controls.Grid obj15;
            private global::Windows.UI.Xaml.Controls.Button obj16;
            private global::Windows.UI.Xaml.Controls.Grid obj17;
            private global::Template10.Behaviors.ConditionalAction obj18;
            private global::Template10.Behaviors.ConditionalAction obj19;

            private HamburgerMenu_obj1_BindingsTracking bindingsTracking;

            public HamburgerMenu_obj1_Bindings()
            {
                this.bindingsTracking = new HamburgerMenu_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14:
                        this.obj14 = (global::Windows.UI.Xaml.Controls.SplitView)target;
                        break;
                    case 15:
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 16:
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 17:
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 18:
                        this.obj18 = (global::Template10.Behaviors.ConditionalAction)target;
                        break;
                    case 19:
                        this.obj19 = (global::Template10.Behaviors.ConditionalAction)target;
                        break;
                    default:
                        break;
                }
            }

            // IHamburgerMenu_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // HamburgerMenu_obj1_Bindings

            public void SetDataRoot(global::Template10.Controls.HamburgerMenu newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Template10.Controls.HamburgerMenu obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PaneWidth(obj.PaneWidth, phase);
                        this.Update_HamburgerButtonGridWidth(obj.HamburgerButtonGridWidth, phase);
                        this.Update_HamburgerBackground(obj.HamburgerBackground, phase);
                        this.Update_HamburgerButtonVisibility(obj.HamburgerButtonVisibility, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_HamburgerCommand(obj.HamburgerCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_HamburgerForeground(obj.HamburgerForeground, phase);
                        this.Update_NavAreaBackground(obj.NavAreaBackground, phase);
                        this.Update_PaneBorderBrush(obj.PaneBorderBrush, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_PaneBorderThickness(obj.PaneBorderThickness, phase);
                        this.Update_HeaderContent(obj.HeaderContent, phase);
                    }
                }
                else
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_HamburgerBackground(phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.UpdateFallback_HamburgerForeground(phase);
                    }
                }
            }
            private void Update_PaneWidth(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_SplitView_OpenPaneLength(this.obj14, obj);
                }
            }
            private void Update_HamburgerButtonGridWidth(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_Width(this.obj15, obj);
                }
            }
            private void Update_HamburgerBackground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj15, obj, null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj16, obj, null);
                }
            }
            private void Update_HamburgerButtonVisibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj15, obj);
                }
            }
            private void Update_HamburgerCommand(global::Template10.Mvvm.MvxCommand obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                }
            }
            private void Update_HamburgerForeground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj16, obj, null);
                }
            }
            private void Update_NavAreaBackground(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj17, obj, null);
                }
            }
            private void Update_PaneBorderBrush(global::Windows.UI.Xaml.Media.SolidColorBrush obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_BorderBrush(this.obj17, obj, null);
                }
            }
            private void Update_PaneBorderThickness(global::Windows.UI.Xaml.Thickness obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Grid_BorderThickness(this.obj17, obj);
                }
            }
            private void Update_HeaderContent(global::Windows.UI.Xaml.UIElement obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    XamlBindingSetters.Set_Template10_Behaviors_ConditionalAction_LeftValue(this.obj18, obj, null);
                    XamlBindingSetters.Set_Template10_Behaviors_ConditionalAction_LeftValue(this.obj19, obj, null);
                }
            }

            private void UpdateFallback_HamburgerBackground(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Panel_Background(this.obj15, (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), "DarkRed"), null);
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Background(this.obj16, (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), "DarkRed"), null);
                }
            }

            private void UpdateFallback_HamburgerForeground(int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_Foreground(this.obj16, (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), "White"), null);
                }
            }

            private class HamburgerMenu_obj1_BindingsTracking
            {
                global::System.WeakReference<HamburgerMenu_obj1_Bindings> WeakRefToBindingObj; 

                public HamburgerMenu_obj1_BindingsTracking(HamburgerMenu_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<HamburgerMenu_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void DependencyPropertyChanged_PaneWidth(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_PaneWidth(obj.PaneWidth, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_HamburgerButtonGridWidth(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_HamburgerButtonGridWidth(obj.HamburgerButtonGridWidth, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_HamburgerBackground(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_HamburgerBackground(obj.HamburgerBackground, DATA_CHANGED);
        }
        else
        {
        bindings.UpdateFallback_HamburgerBackground(DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_HamburgerButtonVisibility(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_HamburgerButtonVisibility(obj.HamburgerButtonVisibility, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_HamburgerForeground(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_HamburgerForeground(obj.HamburgerForeground, DATA_CHANGED);
        }
        else
        {
        bindings.UpdateFallback_HamburgerForeground(DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_NavAreaBackground(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_NavAreaBackground(obj.NavAreaBackground, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_PaneBorderBrush(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_PaneBorderBrush(obj.PaneBorderBrush, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_PaneBorderThickness(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_PaneBorderThickness(obj.PaneBorderThickness, DATA_CHANGED);
        }
                    }
                }
                public void DependencyPropertyChanged_HeaderContent(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::Template10.Controls.HamburgerMenu obj = sender as global::Template10.Controls.HamburgerMenu;
        if (obj != null)
        {
            bindings.Update_HeaderContent(obj.HeaderContent, DATA_CHANGED);
        }
                    }
                }
                private long tokenDPC_PaneWidth = 0;
                private long tokenDPC_HamburgerButtonGridWidth = 0;
                private long tokenDPC_HamburgerBackground = 0;
                private long tokenDPC_HamburgerButtonVisibility = 0;
                private long tokenDPC_HamburgerForeground = 0;
                private long tokenDPC_NavAreaBackground = 0;
                private long tokenDPC_PaneBorderBrush = 0;
                public void UpdateChildListeners_(global::Template10.Controls.HamburgerMenu obj)
                {
                    HamburgerMenu_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.PaneWidthProperty, tokenDPC_PaneWidth);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerButtonGridWidthProperty, tokenDPC_HamburgerButtonGridWidth);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerBackgroundProperty, tokenDPC_HamburgerBackground);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerButtonVisibilityProperty, tokenDPC_HamburgerButtonVisibility);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerForegroundProperty, tokenDPC_HamburgerForeground);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.NavAreaBackgroundProperty, tokenDPC_NavAreaBackground);
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.PaneBorderBrushProperty, tokenDPC_PaneBorderBrush);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_PaneWidth = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.PaneWidthProperty, DependencyPropertyChanged_PaneWidth);
                            tokenDPC_HamburgerButtonGridWidth = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerButtonGridWidthProperty, DependencyPropertyChanged_HamburgerButtonGridWidth);
                            tokenDPC_HamburgerBackground = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerBackgroundProperty, DependencyPropertyChanged_HamburgerBackground);
                            tokenDPC_HamburgerButtonVisibility = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerButtonVisibilityProperty, DependencyPropertyChanged_HamburgerButtonVisibility);
                            tokenDPC_HamburgerForeground = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.HamburgerForegroundProperty, DependencyPropertyChanged_HamburgerForeground);
                            tokenDPC_NavAreaBackground = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.NavAreaBackgroundProperty, DependencyPropertyChanged_NavAreaBackground);
                            tokenDPC_PaneBorderBrush = obj.RegisterPropertyChangedCallback(global::Template10.Controls.HamburgerMenu.PaneBorderBrushProperty, DependencyPropertyChanged_PaneBorderBrush);
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1:
                {
                    this.ThisPage = (global::Windows.UI.Xaml.Controls.UserControl)(target);
                }
                break;
            case 2:
                {
                    this.NavButtonTemplate = (global::Windows.UI.Xaml.DataTemplate)(target);
                }
                break;
            case 3:
                {
                    global::Windows.UI.Xaml.Controls.RadioButton element3 = (global::Windows.UI.Xaml.Controls.RadioButton)(target);
                    #line 80 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element3).Holding += this.NavButton_Holding;
                    #line 83 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element3).Loaded += this.NavButton_Loaded;
                    #line 84 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element3).RightTapped += this.NavButton_RightTapped;
                    #line 86 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.RadioButton)element3).Tapped += this.NavButton_Tapped;
                    #line default
                }
                break;
            case 4:
                {
                    global::Windows.UI.Xaml.Controls.Primitives.ToggleButton element4 = (global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)(target);
                    #line 96 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element4).Checked += this.NavButtonChecked;
                    #line 101 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.Primitives.ToggleButton)element4).Unchecked += this.NavButtonUnchecked;
                    #line default
                }
                break;
            case 5:
                {
                    this.RootGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 6:
                {
                    this.VisualStateGroup = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 7:
                {
                    this.VisualStateNarrow = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 8:
                {
                    this.VisualStateNormal = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 9:
                {
                    this.VisualStateWide = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 10:
                {
                    this.VisualStateWideTrigger = (global::Windows.UI.Xaml.AdaptiveTrigger)(target);
                }
                break;
            case 11:
                {
                    this.VisualStateNormalTrigger = (global::Windows.UI.Xaml.AdaptiveTrigger)(target);
                }
                break;
            case 12:
                {
                    this.VisualStateNarrowTrigger = (global::Windows.UI.Xaml.AdaptiveTrigger)(target);
                }
                break;
            case 13:
                {
                    this.Header = (global::Windows.UI.Xaml.Controls.ContentControl)(target);
                }
                break;
            case 14:
                {
                    this.ShellSplitView = (global::Windows.UI.Xaml.Controls.SplitView)(target);
                }
                break;
            case 15:
                {
                    this.HamburgerButtonGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 16:
                {
                    this.HamburgerButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            case 17:
                {
                    this.PaneContent = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    #line 317 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)this.PaneContent).ManipulationDelta += this.PaneContent_ManipulationDelta;
                    #line 319 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.Grid)this.PaneContent).Tapped += this.PaneContent_Tapped;
                    #line default
                }
                break;
            case 20:
                {
                    this.SecondaryButtonContainer = (global::Windows.UI.Xaml.Controls.ItemsControl)(target);
                }
                break;
            case 21:
                {
                    global::Windows.UI.Xaml.Controls.StackPanel element21 = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    #line 413 "..\..\..\..\Template10\Controls\HamburgerMenu.xaml"
                    ((global::Windows.UI.Xaml.Controls.StackPanel)element21).Loaded += this.SecondaryButtonStackPanel_Loaded;
                    #line default
                }
                break;
            case 22:
                {
                    this.PrimaryButtonContainer = (global::Windows.UI.Xaml.Controls.ItemsControl)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    HamburgerMenu_obj1_Bindings bindings = new HamburgerMenu_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 3:
                {
                    global::Windows.UI.Xaml.Controls.RadioButton element3 = (global::Windows.UI.Xaml.Controls.RadioButton)target;
                    HamburgerMenu_obj3_Bindings bindings = new HamburgerMenu_obj3_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot((global::Template10.Controls.HamburgerButtonInfo) element3.DataContext);
                    element3.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element3, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

