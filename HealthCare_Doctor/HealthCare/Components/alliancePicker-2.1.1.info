{"Name":"Alliance Picker","Id":1449,"Alias":"alliancePicker","Description":"# Alliance Picker\r\n\r\n####Alliance Picker is a customizable and user friendly Picker control.\r\n\r\n**Picker Types**\r\n\r\n- List\r\n- Date\r\n- Time\r\n- DateTime\r\n- Information\r\n- Login\r\n\r\n**Here is an example**\r\n\r\n    using AllianceCustomPicker;   \r\n\tvar items = new List\u003cstring\u003e {\r\n          \"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \r\n          \"California\", \"Colorado\", \"Connecticut\"\r\n       };\r\n\r\n\tvar picker = new AlliancePicker (this);\r\n\tpicker.PlainPickerItems = items;\r\n\tpicker.SourceField = TextBox2;\r\n\tpicker.Type = PickerType.List;\r\n\tpicker.HeaderTitle = \"Choose State\";\r\n\tpicker.Show ();\r\n\r\n- User can customize the colors, fonts.\r\n\r\n\r\n\r\n","Version":"2.1.1","Summary":"Alliance Picker is a customizable and user friendly Picker control.","QuickStart":"**Alliance Picker Provides following features**\r\n\r\n- Custom Pickers\r\n- User Friendly\r\n- Custom Events\r\n\r\n**Different modes in Alliance Picker**\r\n\r\n- List\r\n- Date\r\n- Time\r\n- DateTime\r\n- Information\r\n- Login\r\n\r\n**How to use**\r\n\r\n**Include the below namespace**\r\n\r\n    using AllianceCustomPicker;\r\n\r\n**List Mode**\r\n\r\n- In this sample code ChooseBtn is an UIButton in sample application.\r\n- Assign List of string items to populate a List.\r\n- Specify the Destination Control TextField where to display the text.\r\n- You can change the Title.\r\n\r\n**Sample Code:**\r\n\r\n    public override void ViewDidLoad() \r\n    {\r\n    \tbase.ViewDidLoad();\r\n    \tChooseBtn.TouchUpInside += (object sender, EventArgs e) =\u003e {\r\n    \t\tvar items = new List\u003cstring\u003e {\r\n    \t\t\"Male\", \"Female\"\r\n    \t\t};\r\n    \t\tvar picker = new AlliancePicker (this);\r\n    \t\tpicker.PlainPickerItems = items;\r\n    \t\tpicker.SourceField = TextBox2;\r\n    \t\tpicker.Type = PickerType.List;\r\n    \t\tpicker.HeaderTitle = \"Choose Gender\";\r\n    \t\tpicker.Show ();\r\n    \t};\r\n    }\r\n\r\n**Date Mode**\r\n\r\n- Choose the type as Date.\r\n- You can specify the seperator, date format, full month mode.\r\n- Specify the Destination Control TextField where to display the text.\r\n- You can change the Title.\r\n- You can change colors.\r\n\r\n**Sample Code**\r\n\r\n    public override void ViewDidLoad()\r\n    {\r\n        base.ViewDidLoad();\r\n        ChooseBtn.TouchUpInside += (object sender, EventArgs e) =\u003e {\r\n            var picker1 = new AlliancePicker (this);\r\n            picker1.SourceField = TextBox1;\r\n            picker1.Type = PickerType.Date;\r\n            picker1.DateFormat = SelectDateFormat.DMY;\r\n            picker1.Seperator = \"-\";\r\n            picker1.BorderColor = (UIColor.Brown).CGColor;\r\n            picker1.BackgrondColor = UIColor.Brown;\r\n            picker1.ChooseButtonColor = UIColor.Blue;\r\n            picker1.PlusMinusColor = UIColor.White;\r\n            picker1.IsFullMonthRequired = true;\r\n            picker1.HeaderTitle = \"Choose Date\";\r\n            picker1.Show ();\r\n        };\r\n    }\r\n\r\n**Time Mode**\r\n\r\n- Choose the type as Time.\r\n- Specify the Destination Control TextField where to display the text.\r\n- You can change the Title.\r\n- You can change colors.\r\n\r\n**Sample Code**\r\n\r\n    public override void ViewDidLoad()\r\n    {\r\n        base.ViewDidLoad();\r\n        ChooseBtn.TouchUpInside += (object sender, EventArgs e) =\u003e {\r\n            var picker2 = new AlliancePicker (this);\r\n            picker2.SourceField = TextBox3;\r\n            picker2.Type = PickerType.Time;\r\n            picker2.BorderColor = (UIColor.Magenta).CGColor;\r\n            picker2.BackgrondColor = UIColor.Magenta;\r\n            picker2.ChooseButtonColor = UIColor.Blue;\r\n            picker2.PlusMinusColor = UIColor.Black;\r\n            picker2.HeaderTitle = \"Choose Time\";\r\n            picker2.Show ();\r\n        };\r\n    }\r\n\r\n**Date and Time Mode**\r\n\r\n- Choose the type as DateTime\r\n- Specify the Destination Control TextField where to display the text\r\n- You can change the Title\r\n- You can change colors\r\n\r\n**Sample Code**\r\n\r\n    public override void ViewDidLoad()\r\n    {\r\n        base.ViewDidLoad();\r\n        ChooseBtn.TouchUpInside += (object sender, EventArgs e) =\u003e {\r\n            var picker2 = new AlliancePicker (this);\r\n            picker2.SourceField = TextBox3;\r\n            picker2.Type = PickerType.DateTime;\r\n            picker2.BorderColor = (UIColor.Magenta).CGColor;\r\n            picker2.BackgrondColor = UIColor.Magenta;\r\n            picker2.ChooseButtonColor = UIColor.Blue;\r\n            picker2.PlusMinusColor = UIColor.Black;\r\n            picker2.HeaderTitle = \"Choose Time\";\r\n            picker2.Show ();\r\n        };\r\n    }\r\n\r\n**Information Mode**\r\n\r\n- Choose the type as Info\r\n- You can change the Title\r\n- Specify the text to show\r\n\r\n**Sample Code**\r\n\r\n\tpublic override void ViewDidLoad()\r\n    {\r\n        base.ViewDidLoad();\r\n        ChooseBtn.TouchUpInside += (object sender, EventArgs e) =\u003e {\r\n            var picker2 = new AlliancePicker (this);\r\n            picker2.Type = PickerType.Plain;\r\n            picker2.HeaderTitle = \"Sample Information\";\r\n            picker2.PlainDescription = \"Sample Text\";\r\n            picker2.Show ();\r\n        };\r\n    }\r\n\r\n**Login Mode**\r\n\r\n- Choose the type as Login\r\n- You can change the Title\r\n- You can modify the Login Button Title\r\n- You can specify the username and password max length\r\n- Extend your custom logic in the LoginClicked event\r\n\r\n**Sample Code**\r\n\r\n\tpublic override void ViewDidLoad()\r\n    {\r\n        base.ViewDidLoad();\r\n\r\n        ChooseBtn.TouchUpInside += (object sender, EventArgs e) =\u003e {\r\n            var picker2 = new AlliancePicker (this);\r\n            picker2.Type = PickerType.Login;\r\n            picker2.LoginNameString = \"Authenticate\";\r\n            picker2.UserNameMaxLength = 8;\r\n            picker2.PasswordMaxLength = 8;\r\n            picker2.LoginClicked += (object s1, EventArgs e1) =\u003e {\r\n                UIAlertView view = new UIAlertView (\"Login\", \"Login\r\n                    Successfull\", null, \"Ok\", null);\r\n                    view.Show ();\r\n            };\r\n            picker2.Show ();\r\n        };\r\n    }\r\n\r\n**To change colors and fonts use the below properties**\r\n\r\n1. Picker Background Color\r\n\r\n        \u003c\u003cPickerObject\u003e\u003e.PickerColor = \u003c\u003cUser Defined Color\u003e\u003e\r\n\r\n2. Picker Title Color\r\n\r\n    \t\u003c\u003cPickerObject\u003e\u003e.PickerTitleColor = \u003c\u003cUser Defined Color\u003e\u003e\r\n\r\n3. Picker List Elements Color\r\n\r\n        \u003c\u003cPickerObject\u003e\u003e.ListTextColor = \u003c\u003cUser Defined Color\u003e\u003e\r\n\r\n4. Choose Button Color\r\n\r\n\t\t\u003c\u003cPickerObject\u003e\u003e.ChooseButtonColor = \u003c\u003cUser Defined Color\u003e\u003e\r\n\r\n5. Date, Time and DateTime types Border, Text and Background Color\r\n\r\n\t\t\u003c\u003cPickerObject\u003e\u003e.BackgrondColor = \u003c\u003cUser Defined Color\u003e\u003e\r\n   \t\t\u003c\u003cPickerObject\u003e\u003e.BorderColor = (\u003c\u003cUser Defined Color\u003e\u003e).CGColor\r\n    \t\u003c\u003cPickerObject\u003e\u003e.PlusMinusColor = \u003c\u003cUser Defined Color\u003e\u003e\r\n\r\n6. To apply font for Picker Control\r\n\r\n\t\t\u003c\u003cPickerObject\u003e\u003e.PickerFont = \u003c\u003cUser Defined Font\u003e\u003e","Hash":"0617659cbcf8d2dccf2288205ff28038","TargetPlatforms":["ios"],"TrialHash":null}