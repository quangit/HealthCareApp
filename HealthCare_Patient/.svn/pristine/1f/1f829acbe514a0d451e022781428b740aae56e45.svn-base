{"Name":"Google Play Services - Cloud Messaging (GCM)","Id":2173,"Alias":"googleplayservices-gcm","Description":"Google Play Services - GCM\n==========================\n\nGoogle Cloud Messaging (GCM) is a free service that enables developers to send messages between servers and client apps. This includes downstream messages from servers to client apps, and upstream messages from client apps to servers.\n\nFor example, a lightweight downstream message could inform a client app that there is new data to be fetched from the server, as in the case of a \"new email\" notification. For use cases such as instant messaging, a GCM message can transfer up to 4kb of payload to the client app. The GCM service handles all aspects of queueing of messages and delivery to and from the target client app.\n\n\n\n\n\nGoogle Play Services\n====================\n\nGive your apps more features to attract users on a wider range of devices. With Google Play services, your app can take advantage of the latest, Google-powered features such as Maps, Google+, and more, with automatic platform updates distributed as an APK through the Google Play store. This makes it faster for your users to receive updates and easier for you to integrate the newest that Google has to offer.\n\n\nDevelop\n-------\n\nShip higher quality apps. Faster.\nGet a headstart on your development with Google services that you can use out-of-the-box.\n - Analytics\n - Sign in with Google\n - Maps\n - Places\n - Engage\n\n\n\nGrow an active user base\n------------------------\n\nReach new users and find ways to keep them coming back to your app.\n - Google Cloud Messaging\n - App Indexing\n - App Install Ads\n - App Invites\n - Earn\n\n\n\nTap into a range of tools to make more money\n--------------------------------------------\n\nTake a user-by-user approach to monetization that maximizes your app revenue.\n - AdMob\n - In-App Billing and Subscriptions\n - Android Pay\n \n\n\nMore ways to enhance your app\n-----------------------------\n\n### Use location to power context\n\nRespond to where users are and what they\u0027re doing. Enrich your app with high-accuracy location reporting, geofencing, and activity recognition.\n\n### Stream content to TVs and speakers\nLet users send audio and visual content to any Cast-enabled TV or speaker and control it from their phones or tablets.\n\n### Add social features to your games\nEnhance your games and learn more about your players. Add achievements, leaderboards, saved games, real-time multiplayer, and more.\n\n### Enhance your app for fitness\nParticipate in the fitness ecosystem and add high-engagement features to your app. Analyze raw sensor data or take advantage of shared fitness data.\n\n### Store and manage files in the cloud\nLet users interact with nearly any aspect of their Google Drive content, including sharing permissions, file revisions, and connected apps.\n\n### Support voice actions\nLet users engage with your app quickly and conveniently through voice commands. Respond to system actions or add custom actions of your own.\n\n","Version":"27.0.0.0","Summary":"Simple and reliable messaging to reach over a billion devices.","QuickStart":"Google Cloud Messaging (GCM) is a free service that enables developers to send messages between servers and client apps. This includes downstream messages from servers to client apps, and upstream messages from client apps to servers.\n\nFor example, a lightweight downstream message could inform a client app that there is new data to be fetched from the server, as in the case of a \"new email\" notification. For use cases such as instant messaging, a GCM message can transfer up to 4kb of payload to the client app. The GCM service handles all aspects of queueing of messages and delivery to and from the target client app.\n\n\n\nRequired Android API Levels\n===========================\n\nWe recommend setting your app\u0027s *Target Framework* and *Target Android version* to **Android 5.0 (API Level 21)** or higher in your app project settings.\n\nThis Google Play Service SDK\u0027s requires a *Target Framework* of at least Android 4.1 (API Level 16) to compile.\n\nYou may still set a lower *Minimum Android version* (as low as Android 2.3 - API Level 9) so your app will run on older versions of Android, however you must ensure you do not use any API\u0027s at runtime that are not available on the version of Android your app is running on.\n\n\n\n\nGoogle Developers Console Setup\n=================================\n\nMany of the Google Play Services SDK\u0027s require that you create an application inside the [Google Developers Console][1].  Visit the [Google Developers Console][1] to create a project for your application.\n\nOnce you have created a project for your Android app, enable the necessary APIs in the developer console for the Google Play Services APIs you will be using in your app.\n\n\n\nTo use the Fitness API in your Android app, you must enable the *Cloud Messaging for Android* in the Google Developers Console, under *APIs and Auth*.\n\n\n\nAndroid Manifest \n================\n\nSome Google Play Services APIs require specific metadata, attributes, permissions or features to be declared in your *AndroidManifest.xml* file.\n\nThese can be added manually to the *AndroidManifest.xml* file, or merged in through the use of assembly level attributes.\n\n\nCloud Messaging requires the *Internet*, *WakeLock*, and *com.google.android.c2dm.permission.RECEIVE* permissions.  You add these by including the following assembly level attributes in your app:\n\n```csharp\n[assembly: UsesPermission (Android.Manifest.Permission.Internet)]\n[assembly: UsesPermission (Android.Manifest.Permission.WakeLock)]\n[assembly: UsesPermission (\"com.google.android.c2dm.permission.RECEIVE)]\n```\n\nYou will also need to declare and use a special permission in your manifest file.  Again, you can use the following attributes (note that @PACKAGE_NAME@ is a macro that will be replaced at compile time with your app\u0027s actual package name):\n\n```csharp\n[assembly: Permission (\"@PACKAGE_NAME@.permission.C2D_MESSAGE\")]\n[assembly: UsesPermission (\"@PACKAGE_NAME@.permission.C2D_MESSAGE\")]\n```\n\n\n\nSamples\n=======\n\nYou can find a Sample Application within each Google Play Services component.  The sample will demonstrate the necessary configuration and some basic API usages.\n\n\n\n\n\n\nLearn More\n==========\n\nYou can learn more about the various Google Play Services SDKs \u0026 APIs by visiting the official [Google APIs for Android][3] documentation\n\n\nYou can learn more about Google Play Services GCM by visiting the official [Google Cloud Messaging for Android](https://developers.google.com/cloud-messaging/android/start) documentation.\n\n\n\n[1]: https://console.developers.google.com/ \"Google Developers Console\"\n[2]: https://developer.xamarin.com/guides/android/deployment,_testing,_and_metrics/MD5_SHA1/ \"Finding your SHA-1 Fingerprints\"\n[3]: https://developers.google.com/android/ \"Google APIs for Android\"\n\n","Hash":"88f927a0bc1915660ccfbdd5f2743bb6","TargetPlatforms":["android"],"TrialHash":null}